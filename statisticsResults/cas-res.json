[
    {
        "id": "CompactionStrategyManager_RTS_3.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testLegacyReplay(org.apache.cassandra.batchlog.BatchlogManagerTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CompactionStrategyManager_RTS_14.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testLegacyReplay(org.apache.cassandra.batchlog.BatchlogManagerTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CompactionStrategyManager_RTS_5.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testIndexRedistribution(org.apache.cassandra.index.sasi.SASIIndexTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CompactionStrategyManager_RTS_26.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_23.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_22.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_18.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_27.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_29.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_33.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_15.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_20.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testFailedRunnable(org.apache.cassandra.db.compaction.CompactionExecutorTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CompactionStrategyManager_RTS_11.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_7.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_13.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_8.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_17.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testIndexRedistribution(org.apache.cassandra.index.sasi.SASIIndexTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CompactionStrategyManager_RTS_9.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_30.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_10.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_19.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_12.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_16.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_32.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_6.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_24.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_4.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_21.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_28.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionStrategyManager_RTS_31.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCF_5.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCF_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testScrubDataDirectories(org.apache.cassandra.db.ColumnFamilyStoreTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "Directories_RCF_5.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogArchiver_RCF_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_3.txt",
        "coverage_tests": [],
        "kill_tests": [
            "org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutorTest",
            "org.apache.cassandra.cql3.PagingTest",
            "org.apache.cassandra.cql3.PagingTest",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "testScrubDataDirectories(org.apache.cassandra.db.ColumnFamilyStoreTest)",
            "org.apache.cassandra.metrics.CQLMetricsTest",
            "org.apache.cassandra.service.EmbeddedCassandraServiceTest"
        ],
        "result": "testFailure"
    },
    {
        "id": "ColumnFamilyStore_RCF_6.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCF_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_9.txt",
        "coverage_tests": [],
        "kill_tests": [
            "org.apache.cassandra.batchlog.BatchTest",
            "org.apache.cassandra.auth.PasswordAuthenticatorTest",
            "org.apache.cassandra.auth.PasswordAuthenticatorTest",
            "readAttribute(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "writeAttribute(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "executeMethod(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "org.apache.cassandra.batchlog.BatchlogManagerTest",
            "org.apache.cassandra.cache.AutoSavingCacheTest",
            "org.apache.cassandra.cache.CacheProviderTest",
            "org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutorTest:BeforeFirstTest",
            "org.apache.cassandra.config.CFMetaDataTest",
            "testTransKsMigration(org.apache.cassandra.config.DatabaseDescriptorTest)",
            "testDisableOnAlter(org.apache.cassandra.cql3.CDCStatementTest)",
            "testEnableOnAlter(org.apache.cassandra.cql3.CDCStatementTest)",
            "testEnableOnCreate(org.apache.cassandra.cql3.CDCStatementTest)",
            "lostDeletesTest(org.apache.cassandra.cql3.DeleteTest)",
            "testGcCompactionCells(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionStatic(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionComplexColumn(org.apache.cassandra.cql3.GcCompactionTest)",
            "testLocalDeletionTime(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGarbageCollectOrder(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionRanges(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionRows(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionPartitions(org.apache.cassandra.cql3.GcCompactionTest)",
            "pagingOnRegularColumn(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "pagingOnRegularColumnWithClusteringRestrictions(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "pagingOnRegularColumnWithPartitionRestriction(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "test2iKeyCachePathsSaveKeysForDroppedTableShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsSaveKeysForDroppedTableIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheNonClusteredShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheNonClusteredIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheClusteredShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheClusteredIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testSliceQueriesIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testSliceQueriesShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testInsertAndQuery(org.apache.cassandra.cql3.LargeCompactValueTest)",
            "testPrecisionTime_getNext_simple(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_Mulitple(org.apache.cassandra.cql3.ListsTest)",
            "testPrepender_HugeList(org.apache.cassandra.cql3.ListsTest)",
            "testPrepender_SmallList(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_RollOverNanos(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_BorkedClock(org.apache.cassandra.cql3.ListsTest)",
            "setServerTimestampForNonCqlNativeStatements(org.apache.cassandra.cql3.NonNativeTimestampTest)",
            "org.apache.cassandra.cql3.PagingTest:BeforeFirstTest",
            "testFlushUnwriteableDie(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "testFlushUnwriteableIgnore(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "testFlushUnwriteableStop(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "pagingOnRegularColumn(org.apache.cassandra.cql3.PagingQueryTest)",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "testPstmtInvalidation(org.apache.cassandra.cql3.PstmtPersistenceTest)",
            "testCachedPreparedStatements(org.apache.cassandra.cql3.PstmtPersistenceTest)",
            "queryIndexedSSTableTest(org.apache.cassandra.cql3.QueryWithIndexedSSTableTest)",
            "testManyClusterings(org.apache.cassandra.cql3.SerializationMirrorTest)",
            "testStaticCompactTables(org.apache.cassandra.cql3.SimpleQueryTest)",
            "restrictionOnRegularColumnWithStaticColumnPresentTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithTwoClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "test2ndaryIndexes(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testStaticColumns(org.apache.cassandra.cql3.SimpleQueryTest)",
            "collectionDeletionTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "limitWithMultigetTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "staticDistinctTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testCompactStorageUpdateWithNull(org.apache.cassandra.cql3.SimpleQueryTest)",
            "test2ndaryIndexBug(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRowFilteringOnStaticColumn(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testSStableTimestampOrdering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithLargePartition(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithReverseClusteringOrder(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRangeTombstones(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithOneClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithoutClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testDynamicCompactTables(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRowDeletion(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testDistinct(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTombstoneBoundariesInIndexCached(org.apache.cassandra.cql3.TombstonesWithIndexedSSTableTest)",
            "testTombstoneBoundariesInIndexNotCached(org.apache.cassandra.cql3.TombstonesWithIndexedSSTableTest)",
            "testNonTextComparator(org.apache.cassandra.cql3.ThriftCompatibilityTest)",
            "testDropCompactStaticColumn(org.apache.cassandra.cql3.ThriftCompatibilityTest)",
            "testCqlStatementTracing(org.apache.cassandra.cql3.TraceCqlTest)",
            "org.apache.cassandra.cql3.ViewComplexTest",
            "org.apache.cassandra.cql3.ViewSchemaTest",
            "org.apache.cassandra.cql3.ViewFilteringTest",
            "org.apache.cassandra.cql3.ViewTest",
            "testCounterCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testCastsWithReverseOrder(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testNoLossOfPrecisionForCastToDecimal(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testNumericCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testTimeCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testInvalidQueries(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testOtherTypeCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testMultipleArgumentFunction(org.apache.cassandra.cql3.selection.SelectionColumnMappingTest)",
            "testSelectionColumnMapping(org.apache.cassandra.cql3.selection.SelectionColumnMappingTest)",
            "testSelectPrepared(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testInsertUpdateDelete(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testConstantFunctionArgs(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testPreparedFunctionArgs(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testInvalidSelect(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testSelectUDTLiteral(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testSelectLiteral(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "org.apache.cassandra.cql3.validation.ThriftIllegalColumnsTest",
            "org.apache.cassandra.cql3.validation.ThriftIntegrationTest",
            "testRegularCounters(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testProhibitReversedCounterAsPartOfPrimaryKey(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterFilteringWithNull(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterAndColumnSelection(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounters(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterFiltering(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterUpdatesWithUnset(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCountersOnCollections(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testListWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testListWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testLists(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testAlterCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCompactCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testFunctionsOnCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInClauseWithCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testNonPureFunctionCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCollectionFlush(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDropAndReaddCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDropAndReaddFrozenCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithLargePartition(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithTwoSStables(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetWithTwoSStables(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testUpdateStaticList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testRemovalThroughUpdate(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForSet(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForMap(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnListWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnMapWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnSetWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInsertingCollectionsWithInvalidElements(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMap(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultiCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidCollectionsMix(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSet(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapBulkRemoval(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMaps(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSets(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCollectionAndRegularColumns(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleLists(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDate(org.apache.cassandra.cql3.validation.entities.DateTypeTest)",
            "testClusteringKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testInvalidOperations(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testSecondaryIndex(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testClusteringColumnFiltering(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testUserDefinedTypes(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testToString(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testListWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testMapsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testSetsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testNestedClusteringKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testStaticColumnUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testNormalColumnUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testNestedPartitionKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testPartitionKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testInsertAndSelectJsonSyntaxWithEmptyAndNullValues(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenTuple(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntax(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenUDT(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testToJsonFct(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithCollections(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithNonNativeMapKeys(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithTuplesAndUDTs(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testAlterUDT(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonThreadSafety(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "emptyStringJsonSerializationTest(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonOrdering(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonWithNaNAndInfinity(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testDurationJsonRoundtrip(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxDefaultUnset(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenList(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenMap(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testCaseSensitivity(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonSyntax(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonWithGroupBy(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenSet(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testFromJsonFct(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testShouldFindRowsMatchingEqualityAndContainsRestrictions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldFindRowsMatchingSingleEqualityRestriction(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldFindRowsMatchingMultipleEqualityRestrictions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldNotCreateIndexOnFrozenMaps(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testRequireFilteringDirectiveIfMultipleRestrictionsSpecified(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldNotAcceptUnsupportedRelationsOnEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldRecognizeAlteredOrDeletedMapEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldRejectQueriesForNullEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldTreatQueriesAgainstFrozenMapIndexesAsInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldValidateMapKeyAndValueTypes(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldNotCreateIndexOnNonMapTypes(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testSimpleStaticColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testStaticIndexAndNonStaticIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnFrozenCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnCompoundRowKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnFullCollectionEntryInsertCollectionValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndexWithQuotedIdentifier(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testUnknownCompressionOptions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testInvalidIndexSelect(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnComplexPrimaryKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCompoundRowKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCountersInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectOnMultiIndexOnCollectionsWithNull(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnMapKeys(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnKeyWithReverseClustering(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectCountOnIndexedColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSyntaxVariationsForIndexOnCollectionsValue(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateIndexWithQuotedColumnNames(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCanQuerySecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCompositeValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCompactTableWithValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyInsertValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyWithStaticColumnAndNoRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnClusteringColumnInsertValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "prepareStatementsWithLIKEClauses(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnClustering(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnClusteringInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testMultipleIndexesOnOneColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testDeletions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testUpdatesToMemtableData(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexQueriesWithIndexNotReady(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "droppingIndexInvalidatesPreparedStatements(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnNonStaticColumnsWhereSchemaIncludesStaticColumns(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testWithEmptyRestrictionValueAndSecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testEmptyRestrictionValueWithSecondaryIndexAndCompactTables(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testPartitionKeyWithIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testAllowFilteringOnPartitionKeyWithSecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testAllowFilteringOnPartitionKeyWithIndexForContains(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnStaticColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnRegularColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnDurationColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnFrozenCollectionOfUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnNonFrozenCollectionOfFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndicesOnCompactTable(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testDataCenterName(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectWithEQ(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndexWithCamelCaseIdentifier(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnComposite(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testNamelessIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnClusteringKeyInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnRegularColumnInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testRangeQuery(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testStaticColumns(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithSecondaryIndex(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithLimit(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testAlterClusteringAndStatic(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithEmptyClustering(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnPurging(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithDistinct(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testNegativeTimestamps(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampsOnUnsetColumnsWide(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampsOnUnsetColumns(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testInsertTimestampWithUnset(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testInvalidCustomTimestamp(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampTTL(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimeuuid(org.apache.cassandra.cql3.validation.entities.TimeuuidTest)",
            "testDescClusteringOnTimeuuid(org.apache.cassandra.cql3.validation.entities.TimeuuidTest)",
            "testTuplePutAndGet(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testInvalidQueries(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testNestedTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleWithUnsetValues(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testSelectInStatementWithTuples(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleNotation(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleFromString(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleInClusteringKey(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleInPartitionKey(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testInvalidInputForTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testReversedTypeTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testReversedTypeCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testDateCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testNowToUUIDCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "functionInSelectInRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectClusteringRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnInRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnEQRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnSliceRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectTokenEQRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectTokenSliceRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInClusteringValuesForInsert(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInClusteringValuesForDelete(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testBatchStatement(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInStaticColumnRestrictionInSelect(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInRegularCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInStaticColumnCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInCollectionLiteralCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInCollectionElementCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "systemFunctionsRequireNoExplicitPrivileges(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "requireExecutePermissionOnComponentFunctionsWhenDefiningAggregate(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "revokeExecutePermissionsOnAggregateComponents(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionWrappingAggregate(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "aggregateWrappingFunction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "grantAndRevokeSyntaxRequiresExplicitKeyspace(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInPKForInsert(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInPKForDelete(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectPKRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelection(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testSelectStatementRestrictionsWithNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testModificationStatementWithNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementSimpleRestrictions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalTupleInSelectRestrictions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNestedFunctionInTokenRestriction(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementSimpleSelections(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementNestedSelections(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testBatchStatement(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testModificationStatementWithConditions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalCollectionLiterals(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testBatchStatementWithConditions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalUDTLiterals(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSimpleModificationStatement(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testJavaFunctionArgumentTypeMismatch(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionCounter(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaTupleType(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaTupleTypeCollection(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeWithUse(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserType(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeRenameField(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeAddFieldWithReplace(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUTCollections(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testAllNativeTypes(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaKeyspaceFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaDollarQuotedFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaRuntimeException(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionInvalidReturn(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionInvalidBodies(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionNoParameters(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavascriptSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptFunction(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testScriptReturnTypeCasting(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testScriptParamReturnTypes(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptDisabled(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptBadReturnType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptThrow(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptUTCollections(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptUserType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptTupleType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptTupleTypeCollection(org.apache.cassandra.cql3.validation.entities.UFPureScriptTupleCollectionTest)",
            "testJavascriptSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptFunction(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptReturnTypeCasting(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptParamReturnTypes(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptDisabled(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptCompileFailure(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptInvalidLanguage(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptBadReturnType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptThrow(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptUTCollections(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptUserType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptTupleType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testSecurityPermissions(org.apache.cassandra.cql3.validation.entities.UFSecurityTest)",
            "testAmokUDF(org.apache.cassandra.cql3.validation.entities.UFSecurityTest)",
            "testJavaSourceName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionDropPreparedStatement(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionCreationAndDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testArgAndReturnTypes(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testImportJavaUtil(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testAnyUserTupleType(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testEmptyFunctionName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testEmptyArgName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDropFunctionDropsPreparedStatementsWithDelayedValues(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecutionWithReversedTypeAsOutput(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testCreateOrReplaceJavaFunction(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionInTargetKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionWithReservedName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionInSystemKS(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionNonExistingKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionAfterOnDropKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testWrongKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testUserTypeDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDuplicateArgNames(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testReplaceAllowNulls(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testBrokenFunction(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecutionExceptionNet(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testArgumentGenerics(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecution(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDropKeyspaceContainingFunctionDropsPreparedStatementsWithDelayedValues(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionOverloading(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionDropOnKeyspaceDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testSchemaChange(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testComplexNullValues(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenListType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenUDType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenMapType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenTupleType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenSetType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testTypesWithAndWithoutNulls(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testByteCodeVerifier(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithNotifyAll(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer3(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallComDatastax(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallOrgApache(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassStaticInnerClass(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUsingMapEntry(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassInnerClass(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassInnerClass2(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testInvalidByteCodeUDFs(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithStaticInitializer(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithNotify(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWait(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronized(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer2(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithField(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallFinalize(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallClone(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWaitL(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWaitI(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testAlteringUserTypeNestedWithinMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlterNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlterUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinSet(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinList(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinTuple(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinNestedTuple(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinUserType(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUserTypes(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testNestedUserTypes(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAddFieldToUdt(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testCircularReferences(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testTypeAlterUsedInFunction(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInsertNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUpdateNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testDeleteNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinSet(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinList(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinSetWithView(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "emptyTypeNameTest(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "emptyFieldNameTest(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "renameColumnToEmpty(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUDTWithUnsetValues(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinNonFrozenMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidUDTStatements(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testCassandra8105(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidInputForUserType(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidField(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testFor7684(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testChangingCrcCheckChanceNewFormat(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testChangingCrcCheckChanceOldFormat(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testDropDuringCompaction(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testReservedKeywords(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testConversionFunctions(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testIdentifiers(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testBlobAsFunction(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testFunctionWithNull(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testEmptyBlob(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testBoolean(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testColumnNameValidation(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testNullSupport(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testCompactMetadata(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testFloatWithExponent(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testTableOptions(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testUnescapedString(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testEmpty(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testNanInfinityValues(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testPgSyleFunction(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "testMarkerPgFail(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "testPgSyleInsert(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "listPermissionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "alterSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "listRolesSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "grantRevokePermissionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "customOptionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "roleNameTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "standardOptionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "dropSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "createSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "testMinMaxtimestampRange(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowMarker(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowMarkerDelete(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "baseCheck(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowTombstone(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rangeTombstone(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testMinMaxtimestampRow(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testOverlappingSStablesASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnDifferentSSTables(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnSameSSTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnMemTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnIndexedSSTableDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnIndexedSSTableASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnOverlappingIndexedSSTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testMultiplePartitionsDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSSTablesOnlyDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testOverlappingSStablesDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testMixedMemtableSStablesDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testMixedMemtableSStablesASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSSTablesOnlyASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSinglePartitionQuery(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testBeyondThresholdSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testAllShadowedSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testExpiredTombstones(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testLiveShadowedCellsSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testBelowThresholdSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithUdtFields(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testInvalidCalls(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testReversedType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testNestedFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testSchemaChange(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDropStatements(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDropReferenced(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNoInit(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNullInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateInvalidInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateIncompatibleTypes(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNonExistingFuncs(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateFailingFuncs(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateWithoutStateOrFinal(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateSimple(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateEmpty(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateStateEmpty(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateComplex(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavascriptAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavascriptAggregateSimple(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionDropPreparedStatement(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregatesReferencedInAggregates(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCalledOnNullInput(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testBrokenAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testWrongStateType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testWrongKeyspace(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenSetType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenListType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenMapType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenTupleType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenUDFType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testEmptyValues(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testEmptyListAndNullInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testLogbackReload(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testOrReplaceOptionals(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCustomTypeInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithWriteTimeOrTTL(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateOnCounters(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithColumns(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCountStarFunction(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testArithmeticCorrectness(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregatesWithoutOverflow(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateOverflow(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDoubleAggregatesPrecision(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testNan(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testInfinity(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testSumPrecision(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionsWithCompactStorage(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDropWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropListAndAddListWithSameName(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testCreateAlterKeyspaces(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropSimpleAddComplexColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMultiCellAddFrozenColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropFrozenAddMultiCellColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropTimeUUIDAddUUIDColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropUUIDAddTimeUUIDColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropAddSameType(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropRegularAddStatic(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropStaticAddRegular(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "renameToEmptyTest(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDoubleWith(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterTableWithCompression(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterDropEmptySSTable(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterOnlyColumnBehaviorWithFlush(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterStatementWithAdd(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testChangeStrategyWithUnquotedAgrument(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterKeyspaceWithMultipleInstancesOfSameDCThrowsSyntaxException(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMap(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropListAndAddMapWithSameName(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropComplexAddSimpleColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAddList(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterIndexInterval(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMultipleWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAddMap(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropStaticWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropList(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testBatchDeleteInsert(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchAndConditionalInteraction(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchWithInRestriction(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchUpdate(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchEmpty(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatch(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchMultipleTable(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchRangeDelete(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchWithUnset(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchAndList(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testCreateIndexOnCompactTableWithClusteringColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCQL3PartitionKeyOnlyTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateKeyspaceWithMultipleInstancesOfSameDCThrowsException(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithSmallintColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseNonCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testStaticTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testInvalidCreateTableStatements(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testObsoleteTableProperties(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testKeyspace(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testTruncate(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testMultiOrderingValidation(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTrigger(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTriggerIfNotExists(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDropTrigger(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDropTriggerIfExists(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateIndexOnCompactTableWithoutClusteringColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateIndextWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDoubleWith(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithCompression(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithDurationColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testSparseCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseStaticTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTinyintColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "org.apache.cassandra.cql3.validation.operations.DropCompactStorageThriftTest",
            "testDeleteWithMultipleClusteringColumnsAndEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRangeDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithIntermediateRangeAndOneClusteringColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteByCompositePrefixWithCompaction(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRowDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRowExistence(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testNoRangeGhost(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletedRowsDoNotResurface(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithNoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithOneClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithNonoverlappingRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithRangeAndOneClusteringColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithRangeAndTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithSecondaryIndices(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithOnlyPK(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteColumnNoClustering(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteAndReverseQueries(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithEmptyInRestriction(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testThatDeletesWithEmptyInRestrictionDoNotCreateMutations(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testQueryingOnRangeTombstoneBoundForward(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testQueryingOnRangeTombstoneBoundReverse(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testReverseQueryWithRangeTombstoneOnMultipleBlocks(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithEmptyRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRandomDeletions(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletedRowCannotBeSelected(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRemoveRangeSlice(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteByCompositePrefix(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testCrossMemSSTableMultiColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testCreateWithIdRestore(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testAlterWithId(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testCreateWithIdInvalid(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testCreateWithIdDuplicate(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.operations.DropTest)",
            "testDropTableWithDroppedColumns(org.apache.cassandra.cql3.validation.operations.DropTest)",
            "testInsertWithUnset(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactStorageAndTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testCKInsertWithValueOver64K(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithDefaultTtl(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testPKInsertWithValueOver64K(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithTtl(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsert(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testGroupByWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithoutPagingWithDeletions(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithRangeNamesQueryWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithStaticColumnsWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithStaticColumnsWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithRangeNamesQueryWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testConditionalDeletesWithNonExistingValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNonExistingValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCasDelete(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeUDT(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testUDTField(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeList(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testListItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testExpandedListItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeSet(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeMap(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMapItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testFrozenWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testExpandedMapItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCasAndListIndex(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateTableIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateIndexIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateTypeIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesOnStaticColumns(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNonExistingValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticsWithMultipleConditions(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNullValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalDeleteWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMultiExistConditionOnSameRowNoClustering(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMultiExistConditionOnSameRowClustering(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithUDTs(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithLists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationColumns(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinLists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithMaps(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinMaps(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinUdts(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinTuples(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCasUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCompactStorage(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateKeyspaceIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInsertSetIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testSimpleCas(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCas(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalDelete(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testNonEqConditionalUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCasAndTTL(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testPerPartitionLimitWithCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testFilteringOnClusteringColumnsWithLimitAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testPerPartitionLimit(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testColumnRange(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testIndexOnRegularColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitWithDeletedRowsAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitInCompactTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitInStaticTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testSparseTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testPartitionRange(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testFilteringWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testSeveralMultiColumnRelation(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiplePartitionKeyAndMultiClusteringWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSingleClusteringInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSinglePartitionInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringReversedComponents(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringWithIndexAndValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiColumnRestrictionsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns1(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns2(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns3(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns4(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumnsInReverse(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSimpleTupleQuery(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testINWithDuplicateValue(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiAndSingleColumnRelationMix(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiClusteringInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testWithUnsetValues(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testNonEqualsRelation(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSimpleOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testNormalSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMultiordering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testNormalSelectionOrderMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFunctionSelectionOrderMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testOrderByForInClauseWithNullValue(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInOrderByWithTwoPartitionKeyColumns(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectWithReversedTypeInReverseOrderWithStaticColumnsWithoutStaticRow(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectWithReversedTypeInReverseOrderWithStaticColumnsWithStaticRow(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectInStatementWithDesc(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFieldSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMoreOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFunctionSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInOrderByWithoutSelecting(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testReversedComparator(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testOrderByForInClause(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInvalidOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMultiColumnPartitionKeyWithTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testFilteringOnAllPartitionKeysWithTokenRestriction(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testSingleColumnPartitionKeyWithTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testFilteringOnPartitionKeyWithToken(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithPartitionKeyAndClusteringKeyArguments(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testPrimaryKeyOnly(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testRangeKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testMultiColumnPartitionKeyWithIndexAndTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithCompoundPartitionAndClusteringCols(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testIndexOnCompositeWithCollections(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTruncateWithCaching(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testCompositeIndexWithPK(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithMultiColumnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testLimitBug(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithSingleColumnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testOrderByMultikey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testUndefinedColumns(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenAndCollections(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenAndIndex(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testClusteringColumnRelations(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithIndexedColumnAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidCollectionEqualityRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidMulticolumnSliceRestrictionOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testRangeQueryOnIndex(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testClusteringColumnRelationsWithClusteringOrder(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithClusteringColumn(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithIndexedColumn(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testIndexQueriesOnComplexPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testMultiplePartitionKeyWithIndex(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testFunctionCallWithUnset(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testLimitWithUnset(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testWithUnsetValues(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidSliceRestrictionOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidNonFrozenUDTRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testINWithDuplicateValue(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testClusteringColumnRelationsWithCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testEmptyIN(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidCollectionNonEQRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testLargeClusteringINValues(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testCompositeIndexWithPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testIndexOnClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testPartitionKeyColumnRelations(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testTTLPerRequestLimit(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testRejectExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testRecoverOverflowedExpirationWithScrub(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testTTLDefaultLimit(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapNoWarnExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapWarnExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapNoWarnExpirationOverflowPolicyDefaultTTL(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithLists(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnStaticColumnsWithRowsWithOnlyStaticValues(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testListContainsWithIndexAndFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testListContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testPKQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCKQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithDistinct(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionAndClusteringKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithoutIndicesWithCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithCounters(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithLists(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithMaps(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithSets(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithMaps(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringWithMultiColumnSlices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "containsFilteringForClusteringKeys(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsOnPartitionKeyPart(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringWithOrderClause(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnStaticColumnTest(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "containsFilteringOnNonClusteringColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnCompactTable(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCustomIndexWithFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithCounters(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testClusteringOrderWithSlice(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithSecondaryIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexQueryWithCompositePartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithMultipleClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithOrderBy(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnDurationColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsKeyAndContainsWithIndexOnMapKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsKeyAndContainsWithIndexOnMapValue(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectCount(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testRangeQuery(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCompositeRowKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectSliceFromComposite(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testReverseCompact(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testReversedCompactMultikey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testDifferentOrdering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectOnCompositeInvalid(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelects(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelectsCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelectsNonCompositeCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultipleClausesOnPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectWithToken(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFunctionsWithClusteringDesc(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectWithAlias(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinct(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithDeletions(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithWhereClause(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithWhereClauseOnStaticColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectInClauseAtOne(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectCountPaging(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testClusteringOrder(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectInFinalColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAlias(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndicesWithCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndicesWithFrozenCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithSets(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMapKeyContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectBounds(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testTokenRange(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnStaticColumnsWithRowsWithOnlyStaticValues(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexLookupWithClusteringPrefix(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMapValueContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSetContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectKeyInForWideRows(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSingleClusteringReversed(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithMultipleClusteringColumnsAndOrderBy(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnListContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnMapContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnTupleContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnUdtContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCollectionsWithNull(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMixedTTLOnColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMixedTTLOnColumnsWide(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectKeyIn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testQueryMultipleIndexTypes(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilterWithIndexForContains(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testTruncate(org.apache.cassandra.cql3.validation.operations.TruncateTest)",
            "testUseStatementWithBindVariable(org.apache.cassandra.cql3.validation.operations.UseTest)",
            "testUpdateWithSecondaryIndices(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testThatUpdatesWithEmptyInRestrictionDoNotCreateMutations(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithTtl(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithEmptyInRestriction(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithMultiplePartitionKeyComponents(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testTypeCasts(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithDefaultTtl(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithStaticList(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdate(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "org.apache.cassandra.db.CellTest",
            "org.apache.cassandra.db.CleanupTest",
            "org.apache.cassandra.db.ColumnFamilyMetricTest",
            "org.apache.cassandra.db.ColumnFamilyStoreTest",
            "org.apache.cassandra.db.CounterCacheTest",
            "testCfmColumnsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmOptionsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmIndexJson(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testSnapshot(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testSystemKsSnapshot(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDroppedType(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDenseTable(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testStaticCompactTable(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testStaticCompactWithCounters(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDenseCompactTableWithoutRegulars(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCompactDynamic(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDynamicComposite(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "superColumnFamilyTest(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmCompactStorageCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmCounterCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testReaddedColumns(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDroppedColumnsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testUserTypesCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "org.apache.cassandra.db.CounterCellTest",
            "org.apache.cassandra.db.CounterMutationTest",
            "org.apache.cassandra.db.DeletePartitionTest",
            "org.apache.cassandra.db.KeyCacheTest",
            "blackListTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "updateTokensTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "alterKeyspaceTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "getBoundariesTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "testSecondaryIndexDirectories(org.apache.cassandra.db.DirectoriesTest)",
            "testMTSnapshots(org.apache.cassandra.db.DirectoriesTest)",
            "testGetSliceBloomFilterFalsePositive(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceWithCutoff(org.apache.cassandra.db.KeyspaceTest)",
            "testReversedWithFlushing(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromBasic(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceWithExpiration(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromAdvanced(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromLarge(org.apache.cassandra.db.KeyspaceTest)",
            "testLimitSSTables(org.apache.cassandra.db.KeyspaceTest)",
            "testGetRowSingleColumn(org.apache.cassandra.db.KeyspaceTest)",
            "testGetRowNoColumns(org.apache.cassandra.db.KeyspaceTest)",
            "org.apache.cassandra.db.LegacyLayoutTest",
            "testSameTableNames(org.apache.cassandra.db.MultiKeyspaceTest)",
            "org.apache.cassandra.db.NameSortTest",
            "org.apache.cassandra.db.PartitionRangeReadTest",
            "org.apache.cassandra.db.PartitionTest",
            "org.apache.cassandra.db.ReadCommandTest",
            "org.apache.cassandra.db.RangeTombstoneTest",
            "org.apache.cassandra.db.ReadMessageTest",
            "testLegacyResponseSkipWrongBounds(org.apache.cassandra.db.ReadResponseTest)",
            "org.apache.cassandra.db.RecoveryManagerFlushedTest",
            "org.apache.cassandra.db.RecoveryManagerMissingHeaderTest",
            "org.apache.cassandra.db.RecoveryManagerTest",
            "org.apache.cassandra.db.RecoveryManagerTruncateTest",
            "testDeleteCell(org.apache.cassandra.db.RemoveCellTest)",
            "compactionDropExpiredSSTableTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestOldUnrepaired(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "compactionTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestPartitionTombstones(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestRowTombstones(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readOnlyUnrepairedTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "test7636(org.apache.cassandra.db.RowCacheCQLTest)",
            "testPartialCacheWithStatic(org.apache.cassandra.db.RowCacheCQLTest)",
            "testPartialCache(org.apache.cassandra.db.RowCacheCQLTest)",
            "org.apache.cassandra.db.RowCacheTest",
            "testIndexFor(org.apache.cassandra.db.RowIndexEntryTest)",
            "testSerializedSize(org.apache.cassandra.db.RowIndexEntryTest)",
            "testC11206AgainstPreviousShallow(org.apache.cassandra.db.RowIndexEntryTest)",
            "testC11206AgainstPreviousArray(org.apache.cassandra.db.RowIndexEntryTest)",
            "testRowIterationDeletionTime(org.apache.cassandra.db.RowIterationTest)",
            "testRowIteration(org.apache.cassandra.db.RowIterationTest)",
            "testRowIterationDeletion(org.apache.cassandra.db.RowIterationTest)",
            "org.apache.cassandra.db.RowTest",
            "org.apache.cassandra.db.ScrubTest",
            "org.apache.cassandra.db.SecondaryIndexTest",
            "snapshotSystemKeyspaceIfUpgrading(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testNonLocalToken(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testLocalTokens(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testLocalHostID(org.apache.cassandra.db.SystemKeyspaceTest)",
            "org.apache.cassandra.db.SinglePartitionSliceCommandTest",
            "partitionLevelDeletionTest(org.apache.cassandra.db.SinglePartitionReadCommandCQLTest)",
            "testMixedSources(org.apache.cassandra.db.TimeSortTest)",
            "testTimeSort(org.apache.cassandra.db.TimeSortTest)",
            "org.apache.cassandra.db.VerifyTest",
            "org.apache.cassandra.db.columniterator.SSTableReverseIteratorTest",
            "org.apache.cassandra.db.commitlog.BatchCommitLogTest",
            "testTruncateSegmentDiscard(org.apache.cassandra.db.commitlog.CommitLogCQLTest)",
            "replayCommitLogWithoutFlushing(org.apache.cassandra.db.commitlog.CommitLogChainedMarkersTest)",
            "testCommitFailurePolicy_stop(org.apache.cassandra.db.commitlog.CommitLogFailurePolicyTest)",
            "testReadCountFromMidpoint(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadFromMidpointTooMany(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadFromMidpoint(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadAll(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadCount(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testCLSMCDCDiscardLogic(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "testSegmentFlaggingOnCreation(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "testCDCWriteTimeout(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "org.apache.cassandra.db.commitlog.CommitLogTest",
            "org.apache.cassandra.db.commitlog.CommitLogUpgradeTest",
            "testShutdownWithPendingTasks(org.apache.cassandra.db.commitlog.CommitlogShutdownTest)",
            "org.apache.cassandra.db.commitlog.SnapshotDeletingTest",
            "org.apache.cassandra.db.compaction.AbstractCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.AntiCompactionTest",
            "testRedundantTransitions(org.apache.cassandra.db.compaction.AntiCompactionBytemanTest)",
            "org.apache.cassandra.db.compaction.BlacklistingCompactionsTest",
            "testStandardCompactionTaskCancellation(org.apache.cassandra.db.compaction.CancelCompactionsTest)",
            "org.apache.cassandra.db.compaction.CompactionAwareWriterTest",
            "org.apache.cassandra.db.compaction.CompactionControllerTest",
            "testGcCompactionSupersedeLeft(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionMatches(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testRandom(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSwitchInSuperseded(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionPartitionDeletion(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionRowDeletion(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionBoundaries(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSupersedeRight(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSupersedeMiddle(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testSSTablesAssignedToCorrectCompactionStrategy(org.apache.cassandra.db.compaction.CompactionStrategyManagerTest)",
            "org.apache.cassandra.db.compaction.CompactionsPurgeTest",
            "testTriggerMinorCompactionSTCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSDisabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategy(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionSTCSAlterTable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategyDisable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategyEnable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testBadLocalCompactionStrategyOptions(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSNodetoolDisabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionSTCSNodetoolEnabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionTWCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionDTCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionLCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSAlterTable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testCompactingCFCounting(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "testStopUserDefinedCompactionRepaired(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "testStopSubRangeCompactionRepaired(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "org.apache.cassandra.db.compaction.CompactionsTest",
            "org.apache.cassandra.db.compaction.DateTieredCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.LeveledCompactionStrategyTest",
            "neverPurgeCellTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "minorNeverPurgeTombstonesTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "neverPurgePartitionTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "neverPurgeRowTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "org.apache.cassandra.db.compaction.OneCompactionTest",
            "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.TTLExpiryTest",
            "org.apache.cassandra.db.compaction.TimeWindowCompactionStrategyTest",
            "testMerge(org.apache.cassandra.db.context.CounterContextTest)",
            "testTotal(org.apache.cassandra.db.context.CounterContextTest)",
            "testSetupDeletionNotification(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testMarkObsolete(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testObsoletionPerformance(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testSplit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testUpdates(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testCancellation(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testBadCommit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testCommit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testNoPrepare(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testPrepare(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testThrowableReturn(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testAddSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testDropSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testNotifications(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testMemtableReplacement(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testAddInitialSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testTryModify(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testCommitOnlyOld(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFiles(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumSecondFromLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLineMissingFile(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLineWrongRecordFormat(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testMissingChecksumLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testMissingChecksumSecondFromLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUnparsableLastRecord(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUnparsableFirstRecord(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testObsoletedDataFileUpdateTimeChanged(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesSafeAfterObsoletion(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesThrowsIfCompletingAfterObsoletion(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortOnlyNew(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortOnlyOld(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_commit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_commit_multipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_abort_multipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_mismatchedFinalRecords(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialFinalRecords_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialFinalRecords_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialNonFinalRecord_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialNonFinalRecord_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_missingFinalRecords_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_missingFinalRecords_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_tooManyFinalRecords(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUntrack(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_abort(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitOnlyNew(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitSameDesc(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testNoPrepare(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testThrowableReturn(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testPrepare(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testBadCommit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "org.apache.cassandra.db.lifecycle.RealTransactionsTest",
            "testCompaction(org.apache.cassandra.db.lifecycle.ViewTest)",
            "testFlushing(org.apache.cassandra.db.lifecycle.ViewTest)",
            "testSSTablesInBounds(org.apache.cassandra.db.lifecycle.ViewTest)",
            "org.apache.cassandra.db.marshal.CompositeTypeTest",
            "org.apache.cassandra.db.marshal.DynamicCompositeTypeTest",
            "testTime(org.apache.cassandra.db.marshal.TimeTypeTest)",
            "testComparison(org.apache.cassandra.db.marshal.TimeTypeTest)",
            "org.apache.cassandra.db.partition.PartitionImplementationTest",
            "testOperationCount(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "testMutationSize(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "testOperationCountWithCompactTable(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "org.apache.cassandra.db.rows.RowAndDeletionMergeIteratorTest",
            "testTableWithCollection(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testStaticCompactTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCQLTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCompactTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCounterTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "org.apache.cassandra.dht.BootStrapperTest",
            "testDescribeOwnership(org.apache.cassandra.dht.ByteOrderedPartitionerTest)",
            "org.apache.cassandra.dht.KeyCollisionTest",
            "testDescribeOwnership(org.apache.cassandra.dht.OrderPreservingPartitionerTest)",
            "testUpdateAndQueryAvailableRanges(org.apache.cassandra.dht.StreamStateStoreTest)",
            "testConvictAfterLeft(org.apache.cassandra.gms.FailureDetectorTest)",
            "org.apache.cassandra.gms.GossiperTest",
            "org.apache.cassandra.gms.PendingRangeCalculatorServiceTest",
            "testDelayedResponse(org.apache.cassandra.gms.ShadowRoundTest)",
            "testSerializer(org.apache.cassandra.hints.HintMessageTest)",
            "org.apache.cassandra.hints.HintTest",
            "org.apache.cassandra.hints.HintsBufferPoolTest",
            "org.apache.cassandra.hints.HintsBufferTest",
            "org.apache.cassandra.hints.HintsCatalogTest",
            "org.apache.cassandra.hints.HintsCompressionTest",
            "org.apache.cassandra.hints.HintsEncryptionTest",
            "testNormalRead(org.apache.cassandra.hints.HintsReaderTest)",
            "testDroppedTableRead(org.apache.cassandra.hints.HintsReaderTest)",
            "org.apache.cassandra.hints.LegacyHintsMigratorTest",
            "org.apache.cassandra.hints.HintsServiceTest",
            "notifyIndexersOfPartitionAndRowRemovalDuringCleanup(org.apache.cassandra.index.CustomIndexTest)",
            "notifyIndexersOfExpiredRowsDuringCompaction(org.apache.cassandra.index.CustomIndexTest)",
            "validateOptions(org.apache.cassandra.index.CustomIndexTest)",
            "validateOptionsWithCFMetaData(org.apache.cassandra.index.CustomIndexTest)",
            "testFailing2iFlush(org.apache.cassandra.index.CustomIndexTest)",
            "indexBuildingPagesLargePartitions(org.apache.cassandra.index.CustomIndexTest)",
            "partitionIndexTest(org.apache.cassandra.index.CustomIndexTest)",
            "partitionIsNotOverIndexed(org.apache.cassandra.index.CustomIndexTest)",
            "rangeTombstoneTest(org.apache.cassandra.index.CustomIndexTest)",
            "testInsertsOnCfsBackedIndex(org.apache.cassandra.index.CustomIndexTest)",
            "testTruncateWithNonCfsCustomIndex(org.apache.cassandra.index.CustomIndexTest)",
            "indexControlsIfIncludedInBuildOnNewSSTables(org.apache.cassandra.index.CustomIndexTest)",
            "indexReceivesWriteTimeDeletionsCorrectly(org.apache.cassandra.index.CustomIndexTest)",
            "nonCustomIndexesRequireExactlyOneTargetColumn(org.apache.cassandra.index.CustomIndexTest)",
            "rejectDuplicateColumnsInTargetList(org.apache.cassandra.index.CustomIndexTest)",
            "requireFullQualifierForFrozenCollectionTargets(org.apache.cassandra.index.CustomIndexTest)",
            "defaultIndexNameContainsTargetColumns(org.apache.cassandra.index.CustomIndexTest)",
            "createMultiColumnIndexes(org.apache.cassandra.index.CustomIndexTest)",
            "createMultiColumnIndexIncludingUserTypeColumn(org.apache.cassandra.index.CustomIndexTest)",
            "createIndexWithoutTargets(org.apache.cassandra.index.CustomIndexTest)",
            "testCustomIndexExpressionSyntax(org.apache.cassandra.index.CustomIndexTest)",
            "customIndexDoesntSupportCustomExpressions(org.apache.cassandra.index.CustomIndexTest)",
            "customIndexRejectsExpressionSyntax(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionsMustTargetCustomIndex(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionsDisallowedInModifications(org.apache.cassandra.index.CustomIndexTest)",
            "indexSelectionPrefersMostSelectiveIndex(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionForcesIndexSelection(org.apache.cassandra.index.CustomIndexTest)",
            "testCustomExpressionValueType(org.apache.cassandra.index.CustomIndexTest)",
            "reloadIndexMetadataOnBaseCfsReload(org.apache.cassandra.index.CustomIndexTest)",
            "indexOnRegularColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenListWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnSecondPartitionKeyColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapValuesWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapValuesWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapKeysWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapKeysWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapEntriesWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapEntriesWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnRegularColumnWithCompactStorage(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "testIndexOnCompactTable(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnClusteringColumnWithoutRegularColumns(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "createIndexesOnMultipleMapDimensions(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "insertWithTombstoneRemovesEntryFromIndex(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "updateTTLOnIndexedClusteringValue(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexBatchStatements(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexStatementsWithConditions(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexCorrectlyMarkedAsBuildAndRemoved(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenList(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenSetWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenMap(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenListWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnStaticColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFirstPartitionKeyColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnSecondClusteringColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenSet(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFirstClusteringColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenSetWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "testPagingWithClustering(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testNonLiteralStringCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testBlobCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testIntCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testStringCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testStringLikePrefix(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testPaging(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testDisableSASIIndexes(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testClientWarningOnCreate(org.apache.cassandra.index.sasi.SASICQLTest)",
            "org.apache.cassandra.index.sasi.SASIIndexTest",
            "org.apache.cassandra.index.sasi.disk.PerSSTableIndexWriterTest",
            "org.apache.cassandra.index.sasi.plan.OperationTest",
            "lz4ParamsTest(org.apache.cassandra.io.compress.CQLCompressionTest)",
            "lz4BadParamsTest(org.apache.cassandra.io.compress.CQLCompressionTest)",
            "compressionEnabled(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor3(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor2(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor1(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "org.apache.cassandra.io.sstable.BigTableWriterTest",
            "org.apache.cassandra.io.sstable.CQLSSTableWriterTest",
            "org.apache.cassandra.io.sstable.IndexSummaryRedistributionTest",
            "org.apache.cassandra.io.sstable.IndexSummaryManagerTest",
            "org.apache.cassandra.io.sstable.LegacySSTableTest",
            "org.apache.cassandra.io.sstable.SSTableCorruptionDetectionTest",
            "org.apache.cassandra.io.sstable.SSTableCorruptionDetectionTest",
            "org.apache.cassandra.io.sstable.SSTableLoaderTest",
            "org.apache.cassandra.io.sstable.SSTableMetadataTest",
            "org.apache.cassandra.io.sstable.SSTableReaderTest",
            "org.apache.cassandra.io.sstable.SSTableRewriterTest",
            "org.apache.cassandra.io.sstable.SSTableScannerTest",
            "org.apache.cassandra.io.sstable.SSTableWriterTest",
            "testFlushObserver(org.apache.cassandra.io.sstable.format.SSTableFlushObserverTest)",
            "org.apache.cassandra.locator.CloudstackSnitchTest",
            "org.apache.cassandra.locator.EC2SnitchTest",
            "org.apache.cassandra.locator.GoogleCloudSnitchTest",
            "org.apache.cassandra.locator.ReplicationStrategyEndpointCacheTest",
            "org.apache.cassandra.locator.SimpleStrategyTest",
            "org.apache.cassandra.metrics.CQLMetricsTest",
            "testHintsMetrics(org.apache.cassandra.metrics.HintedHandOffMetricsTest)",
            "testUpdatesBackPressureOnSendWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "testUpdatesBackPressureOnTimeoutWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "testAppliesBackPressureWhenEnabled(org.apache.cassandra.net.MessagingServiceTest)",
            "testUpdatesBackPressureOnReceiveWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "org.apache.cassandra.net.MockMessagingServiceTest",
            "testDroppable(org.apache.cassandra.net.OutboundTcpConnectionTest)",
            "testNondroppable(org.apache.cassandra.net.OutboundTcpConnectionTest)",
            "org.apache.cassandra.repair.LocalSyncTaskTest",
            "org.apache.cassandra.repair.RepairJobTest",
            "org.apache.cassandra.repair.ValidatorTest",
            "testInvalidBloomFilterFPRatio(org.apache.cassandra.schema.CreateTableValidationTest)",
            "org.apache.cassandra.schema.DefsTest",
            "org.apache.cassandra.schema.SchemaKeyspaceTest",
            "testMigrate(org.apache.cassandra.schema.LegacySchemaMigratorTest)",
            "org.apache.cassandra.service.ActiveRepairServiceTest",
            "org.apache.cassandra.service.ClientWarningsTest",
            "org.apache.cassandra.service.DataResolverTest",
            "org.apache.cassandra.service.EmbeddedCassandraServiceTest:BeforeFirstTest",
            "org.apache.cassandra.service.JoinTokenRingTest",
            "testStartupChecks(org.apache.cassandra.service.LegacyAuthFailTest)",
            "org.apache.cassandra.service.LeaveAndBootstrapTest",
            "testEvolveSystemKeyspaceNew(org.apache.cassandra.service.MigrationManagerTest)",
            "testEvolveSystemKeyspaceExistsUpToDate(org.apache.cassandra.service.MigrationManagerTest)",
            "testEvolveSystemKeyspaceChanged(org.apache.cassandra.service.MigrationManagerTest)",
            "testIgnoresStoppedOnAlreadyStopped(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentStarts(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentStops(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testPlainDefaultPort(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLOnly(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentDestroys(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testIgnoresStartOnAlreadyStarted(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testServiceCanBeStopped(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testDestroy(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLOptional(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLWithNonSSL(org.apache.cassandra.service.NativeTransportServiceTest)",
            "org.apache.cassandra.service.MoveTest",
            "org.apache.cassandra.service.PaxosStateTest",
            "org.apache.cassandra.service.ProtocolBetaVersionTest",
            "org.apache.cassandra.service.QueryPagerTest",
            "testRemoveHostId(org.apache.cassandra.service.RemoveTest)",
            "failStartupIfInvalidSSTablesFound(org.apache.cassandra.service.StartupChecksTest)",
            "failStartupIfInvalidSSTablesFound(org.apache.cassandra.service.StartupChecksTest)",
            "compatibilityCheckIgnoresNonDbFiles(org.apache.cassandra.service.StartupChecksTest)",
            "compatibilityCheckIgnoresNonDbFiles(org.apache.cassandra.service.StartupChecksTest)",
            "maxMapCountCheck(org.apache.cassandra.service.StartupChecksTest)",
            "maxMapCountCheck(org.apache.cassandra.service.StartupChecksTest)",
            "testRegularMode(org.apache.cassandra.service.StorageServiceServerTest)",
            "testSnapshotWithFlush(org.apache.cassandra.service.StorageServiceServerTest)",
            "testTableSnapshot(org.apache.cassandra.service.StorageServiceServerTest)",
            "testSnapshot(org.apache.cassandra.service.StorageServiceServerTest)",
            "org.apache.cassandra.streaming.StreamTransferTaskTest",
            "org.apache.cassandra.streaming.StreamingTransferTest",
            "testSSTableExpiredBlockers_WithArgs(org.apache.cassandra.tools.SSTableExpiredBlockersTest)",
            "testSSTableLevelResetter_WithArgs(org.apache.cassandra.tools.SSTableLevelResetterTest)",
            "testSSTableOfflineRelevel_WithArgs(org.apache.cassandra.tools.SSTableOfflineRelevelTest)",
            "testStandaloneScrubber_WithArgs(org.apache.cassandra.tools.StandaloneScrubberTest)",
            "testStandaloneSSTableUtil_WithArgs(org.apache.cassandra.tools.StandaloneSSTableUtilTest)",
            "testStandaloneUpgrader_WithArgs(org.apache.cassandra.tools.StandaloneUpgraderTest)",
            "testStandaloneVerifier_WithArgs(org.apache.cassandra.tools.StandaloneVerifierTest)",
            "disableDynamicLimitWithSystemProperty(org.apache.cassandra.transport.DynamicLimitTest)",
            "disallowLoweringMaxVersion(org.apache.cassandra.transport.DynamicLimitTest)",
            "org.apache.cassandra.transport.InflightRequestPayloadTrackerTest",
            "testMessagePayloadVersion3(org.apache.cassandra.transport.MessagePayloadTest)",
            "testMessagePayload(org.apache.cassandra.transport.MessagePayloadTest)",
            "org.apache.cassandra.transport.ProtocolNegotiationTest",
            "addTriggerToCf(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "removeTriggerFromCf(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "addNewCfWithTriggerToKs(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "newKsContainsCfWithTrigger(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "onThriftCASRejectGeneratedUpdatesForDifferentPartition(org.apache.cassandra.triggers.TriggersTest)",
            "onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentTable(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftInsert(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftBatchUpdate(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlInsertWithConditions(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlBatchWithConditions(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftCASOperation(org.apache.cassandra.triggers.TriggersTest)",
            "onThriftCASRejectGeneratedUpdatesForDifferentCF(org.apache.cassandra.triggers.TriggersTest)",
            "ifTriggerThrowsErrorNoMutationsAreApplied(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlInsert(org.apache.cassandra.triggers.TriggersTest)",
            "onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentPartition(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlBatchInsert(org.apache.cassandra.triggers.TriggersTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "Directories_RCF_10.txt",
        "coverage_tests": [],
        "kill_tests": [
            "org.apache.cassandra.batchlog.BatchTest",
            "org.apache.cassandra.auth.PasswordAuthenticatorTest",
            "org.apache.cassandra.auth.PasswordAuthenticatorTest",
            "readAttribute(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "writeAttribute(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "executeMethod(org.apache.cassandra.auth.jmx.JMXAuthTest)",
            "org.apache.cassandra.batchlog.BatchlogManagerTest",
            "org.apache.cassandra.cache.CacheProviderTest",
            "org.apache.cassandra.cache.AutoSavingCacheTest",
            "org.apache.cassandra.concurrent.DebuggableScheduledThreadPoolExecutorTest",
            "org.apache.cassandra.config.CFMetaDataTest",
            "testTransKsMigration(org.apache.cassandra.config.DatabaseDescriptorTest)",
            "testDisableOnAlter(org.apache.cassandra.cql3.CDCStatementTest)",
            "testEnableOnAlter(org.apache.cassandra.cql3.CDCStatementTest)",
            "testEnableOnCreate(org.apache.cassandra.cql3.CDCStatementTest)",
            "lostDeletesTest(org.apache.cassandra.cql3.DeleteTest)",
            "testGcCompactionCells(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionStatic(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionComplexColumn(org.apache.cassandra.cql3.GcCompactionTest)",
            "testLocalDeletionTime(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGarbageCollectOrder(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionRanges(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionRows(org.apache.cassandra.cql3.GcCompactionTest)",
            "testGcCompactionPartitions(org.apache.cassandra.cql3.GcCompactionTest)",
            "pagingOnRegularColumnWithClusteringRestrictions(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "pagingOnRegularColumn(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "pagingOnRegularColumnWithPartitionRestriction(org.apache.cassandra.cql3.IndexQueryPagingTest)",
            "test2iKeyCachePathsSaveKeysForDroppedTableShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsSaveKeysForDroppedTableIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "test2iKeyCachePathsIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheNonClusteredShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheNonClusteredIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheClusteredShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testKeyCacheClusteredIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testSliceQueriesIndexInfoOnHeap(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testSliceQueriesShallowIndexEntry(org.apache.cassandra.cql3.KeyCacheCqlTest)",
            "testInsertAndQuery(org.apache.cassandra.cql3.LargeCompactValueTest)",
            "testPrecisionTime_getNext_simple(org.apache.cassandra.cql3.ListsTest)",
            "testPrepender_HugeList(org.apache.cassandra.cql3.ListsTest)",
            "testPrepender_SmallList(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_Mulitple(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_RollOverNanos(org.apache.cassandra.cql3.ListsTest)",
            "testPrecisionTime_getNext_BorkedClock(org.apache.cassandra.cql3.ListsTest)",
            "setServerTimestampForNonCqlNativeStatements(org.apache.cassandra.cql3.NonNativeTimestampTest)",
            "org.apache.cassandra.cql3.PagingTest",
            "org.apache.cassandra.cql3.PagingTest",
            "testFlushUnwriteableDie(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "testFlushUnwriteableIgnore(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "testFlushUnwriteableStop(org.apache.cassandra.cql3.OutOfSpaceTest)",
            "pagingOnRegularColumn(org.apache.cassandra.cql3.PagingQueryTest)",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "org.apache.cassandra.cql3.PreparedStatementsTest",
            "testPstmtInvalidation(org.apache.cassandra.cql3.PstmtPersistenceTest)",
            "testCachedPreparedStatements(org.apache.cassandra.cql3.PstmtPersistenceTest)",
            "queryIndexedSSTableTest(org.apache.cassandra.cql3.QueryWithIndexedSSTableTest)",
            "testManyClusterings(org.apache.cassandra.cql3.SerializationMirrorTest)",
            "testStaticCompactTables(org.apache.cassandra.cql3.SimpleQueryTest)",
            "restrictionOnRegularColumnWithStaticColumnPresentTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithTwoClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "test2ndaryIndexes(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testStaticColumns(org.apache.cassandra.cql3.SimpleQueryTest)",
            "collectionDeletionTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "limitWithMultigetTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "staticDistinctTest(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testCompactStorageUpdateWithNull(org.apache.cassandra.cql3.SimpleQueryTest)",
            "test2ndaryIndexBug(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRowFilteringOnStaticColumn(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testSStableTimestampOrdering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithLargePartition(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithReverseClusteringOrder(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRangeTombstones(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithOneClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTableWithoutClustering(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testDynamicCompactTables(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testRowDeletion(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testDistinct(org.apache.cassandra.cql3.SimpleQueryTest)",
            "testTombstoneBoundariesInIndexCached(org.apache.cassandra.cql3.TombstonesWithIndexedSSTableTest)",
            "testTombstoneBoundariesInIndexNotCached(org.apache.cassandra.cql3.TombstonesWithIndexedSSTableTest)",
            "testNonTextComparator(org.apache.cassandra.cql3.ThriftCompatibilityTest)",
            "testDropCompactStaticColumn(org.apache.cassandra.cql3.ThriftCompatibilityTest)",
            "testCqlStatementTracing(org.apache.cassandra.cql3.TraceCqlTest)",
            "org.apache.cassandra.cql3.ViewComplexTest",
            "org.apache.cassandra.cql3.ViewFilteringTest",
            "org.apache.cassandra.cql3.ViewSchemaTest",
            "org.apache.cassandra.cql3.ViewTest",
            "testInvalidQueries(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testCastsWithReverseOrder(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testCounterCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testNoLossOfPrecisionForCastToDecimal(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testNumericCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testTimeCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testOtherTypeCastsInSelectionClause(org.apache.cassandra.cql3.functions.CastFctsTest)",
            "testMultipleArgumentFunction(org.apache.cassandra.cql3.selection.SelectionColumnMappingTest)",
            "testSelectionColumnMapping(org.apache.cassandra.cql3.selection.SelectionColumnMappingTest)",
            "testInvalidSelect(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testPreparedFunctionArgs(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testInsertUpdateDelete(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testSelectPrepared(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testConstantFunctionArgs(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testSelectUDTLiteral(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "testSelectLiteral(org.apache.cassandra.cql3.selection.TermSelectionTest)",
            "org.apache.cassandra.cql3.validation.ThriftIntegrationTest",
            "org.apache.cassandra.cql3.validation.ThriftIllegalColumnsTest",
            "testRegularCounters(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testProhibitReversedCounterAsPartOfPrimaryKey(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterFilteringWithNull(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterAndColumnSelection(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounters(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterFiltering(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCounterUpdatesWithUnset(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testCountersOnCollections(org.apache.cassandra.cql3.validation.entities.CountersTest)",
            "testMapBulkRemoval(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testListWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testLists(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCompactCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testFunctionsOnCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInClauseWithCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testNonPureFunctionCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCollectionFlush(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDropAndReaddCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDropAndReaddFrozenCollection(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithLargePartition(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithTwoSStables(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetWithTwoSStables(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testUpdateStaticList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSetsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testRemovalThroughUpdate(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForSet(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidInputForMap(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnListWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnMapWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleOperationOnSetWithinTheSameQuery(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInsertingCollectionsWithInvalidElements(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultiCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testList(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMap(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testCollectionAndRegularColumns(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testListWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMapWithUnsetValues(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSet(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testInvalidCollectionsMix(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMaps(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testSets(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testMultipleLists(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testAlterCollections(org.apache.cassandra.cql3.validation.entities.CollectionsTest)",
            "testDate(org.apache.cassandra.cql3.validation.entities.DateTypeTest)",
            "testNestedClusteringKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testInvalidOperations(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testSecondaryIndex(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testClusteringColumnFiltering(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenListInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenMapInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInMap(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInSet(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testFrozenSetInList(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testUserDefinedTypes(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testToString(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testListWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testMapsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testSetsWithElementsBiggerThan64K(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testNormalColumnUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testStaticColumnUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testClusteringKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testNestedPartitionKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testPartitionKeyUsage(org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest)",
            "testSimpleStaticColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testStaticIndexAndNonStaticIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnFrozenCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testIndexOnCompoundRowKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnStaticColumnTest)",
            "testShouldFindRowsMatchingEqualityAndContainsRestrictions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldFindRowsMatchingSingleEqualityRestriction(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldFindRowsMatchingMultipleEqualityRestrictions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldNotCreateIndexOnFrozenMaps(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testRequireFilteringDirectiveIfMultipleRestrictionsSpecified(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldNotAcceptUnsupportedRelationsOnEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldRecognizeAlteredOrDeletedMapEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testShouldRejectQueriesForNullEntries(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testInsertAndSelectJsonSyntaxWithEmptyAndNullValues(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenTuple(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testShouldTreatQueriesAgainstFrozenMapIndexesAsInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testInsertJsonSyntax(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testShouldValidateMapKeyAndValueTypes(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testSelectJsonWithPagingWithFrozenUDT(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testShouldNotCreateIndexOnNonMapTypes(org.apache.cassandra.cql3.validation.entities.SecondaryIndexOnMapEntriesTest)",
            "testToJsonFct(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithCollections(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithNonNativeMapKeys(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxWithTuplesAndUDTs(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testAlterUDT(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonThreadSafety(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "emptyStringJsonSerializationTest(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonOrdering(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonWithNaNAndInfinity(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testDurationJsonRoundtrip(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testInsertJsonSyntaxDefaultUnset(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenSet(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenMap(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testCaseSensitivity(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonSyntax(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testJsonWithGroupBy(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testSelectJsonWithPagingWithFrozenList(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testFromJsonFct(org.apache.cassandra.cql3.validation.entities.JsonTest)",
            "testIndexOnFullCollectionEntryInsertCollectionValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndexWithQuotedIdentifier(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testNamelessIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnComposite(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testInvalidIndexSelect(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnComplexPrimaryKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCompoundRowKey(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCountersInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCollections(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectOnMultiIndexOnCollectionsWithNull(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnMapKeys(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnKeyWithReverseClustering(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectCountOnIndexedColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSyntaxVariationsForIndexOnCollectionsValue(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateIndexWithQuotedColumnNames(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCanQuerySecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnCompositeValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCompactTableWithValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyInsertValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyWithStaticColumnAndNoRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnClusteringColumnInsertValueOver64k(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "prepareStatementsWithLIKEClauses(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnClustering(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnClusteringInvalid(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testMultipleIndexesOnOneColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testDeletions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testUpdatesToMemtableData(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexQueriesWithIndexNotReady(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "droppingIndexInvalidatesPreparedStatements(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexesOnNonStaticColumnsWhereSchemaIncludesStaticColumns(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testWithEmptyRestrictionValueAndSecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testEmptyRestrictionValueWithSecondaryIndexAndCompactTables(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testPartitionKeyWithIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testAllowFilteringOnPartitionKeyWithSecondaryIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testAllowFilteringOnPartitionKeyWithIndexForContains(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnStaticColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnRegularColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnDurationColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testUnknownCompressionOptions(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testSelectWithEQ(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndexWithCamelCaseIdentifier(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testDataCenterName(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testCreateAndDropIndex(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnFrozenCollectionOfUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnNonFrozenCollectionOfFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnPartitionKeyInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnClusteringKeyInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndexOnRegularColumnInsertExpiringColumn(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testIndicesOnCompactTable(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testRangeQuery(org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest)",
            "testStaticColumns(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithSecondaryIndex(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithLimit(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testAlterClusteringAndStatic(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithEmptyClustering(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnPurging(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testStaticColumnsWithDistinct(org.apache.cassandra.cql3.validation.entities.StaticColumnsTest)",
            "testNegativeTimestamps(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampsOnUnsetColumnsWide(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampsOnUnsetColumns(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testInsertTimestampWithUnset(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testInvalidCustomTimestamp(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testTimestampTTL(org.apache.cassandra.cql3.validation.entities.TimestampTest)",
            "testDescClusteringOnTimeuuid(org.apache.cassandra.cql3.validation.entities.TimeuuidTest)",
            "testTimeuuid(org.apache.cassandra.cql3.validation.entities.TimeuuidTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testReversedTypeCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testDateCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testNowToUUIDCompatibility(org.apache.cassandra.cql3.validation.entities.TypeTest)",
            "testTuplePutAndGet(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testInvalidQueries(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testNestedTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleWithUnsetValues(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testSelectInStatementWithTuples(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleNotation(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleFromString(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleInClusteringKey(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testTupleInPartitionKey(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testInvalidInputForTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "testReversedTypeTuple(org.apache.cassandra.cql3.validation.entities.TupleTypeTest)",
            "functionInSelectInRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectClusteringRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnInRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnEQRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectMultiColumnSliceRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectTokenEQRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectTokenSliceRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInClusteringValuesForInsert(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInClusteringValuesForDelete(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testBatchStatement(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInStaticColumnRestrictionInSelect(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInRegularCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInStaticColumnCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInCollectionLiteralCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInCollectionElementCondition(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "systemFunctionsRequireNoExplicitPrivileges(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "requireExecutePermissionOnComponentFunctionsWhenDefiningAggregate(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "revokeExecutePermissionsOnAggregateComponents(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionWrappingAggregate(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "aggregateWrappingFunction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "grantAndRevokeSyntaxRequiresExplicitKeyspace(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInPKForInsert(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInPKForDelete(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelectPKRestriction(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "functionInSelection(org.apache.cassandra.cql3.validation.entities.UFAuthTest)",
            "testSelectStatementRestrictionsWithNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testModificationStatementWithNestedFunctions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementSimpleRestrictions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalTupleInSelectRestrictions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNestedFunctionInTokenRestriction(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementSimpleSelections(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSelectStatementNestedSelections(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testBatchStatement(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testModificationStatementWithConditions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalCollectionLiterals(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testBatchStatementWithConditions(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testNonTerminalUDTLiterals(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testSimpleModificationStatement(org.apache.cassandra.cql3.validation.entities.UFIdentificationTest)",
            "testJavaFunctionArgumentTypeMismatch(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionCounter(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaTupleType(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaTupleTypeCollection(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeWithUse(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserType(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeRenameField(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUserTypeAddFieldWithReplace(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaUTCollections(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testAllNativeTypes(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaKeyspaceFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaDollarQuotedFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaRuntimeException(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionInvalidReturn(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionInvalidBodies(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunctionNoParameters(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavaFunction(org.apache.cassandra.cql3.validation.entities.UFJavaTest)",
            "testJavascriptSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptFunction(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testScriptReturnTypeCasting(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testScriptParamReturnTypes(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptDisabled(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptBadReturnType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptThrow(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptUTCollections(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptUserType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptTupleType(org.apache.cassandra.cql3.validation.entities.UFPureScriptTest)",
            "testJavascriptTupleTypeCollection(org.apache.cassandra.cql3.validation.entities.UFPureScriptTupleCollectionTest)",
            "testJavascriptSimpleCollections(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptFunction(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptReturnTypeCasting(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptParamReturnTypes(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptDisabled(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptCompileFailure(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testScriptInvalidLanguage(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptBadReturnType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptThrow(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptUTCollections(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptUserType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testJavascriptTupleType(org.apache.cassandra.cql3.validation.entities.UFScriptTest)",
            "testSecurityPermissions(org.apache.cassandra.cql3.validation.entities.UFSecurityTest)",
            "testAmokUDF(org.apache.cassandra.cql3.validation.entities.UFSecurityTest)",
            "testChangingCrcCheckChanceNewFormat(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testChangingCrcCheckChanceOldFormat(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testDropDuringCompaction(org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest)",
            "testComplexNullValues(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenListType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenUDType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenMapType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenTupleType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testFunctionWithFrozenSetType(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testTypesWithAndWithoutNulls(org.apache.cassandra.cql3.validation.entities.UFTypesTest)",
            "testReservedKeywords(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testConversionFunctions(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testIdentifiers(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testBlobAsFunction(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testFunctionWithNull(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testEmptyBlob(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testBoolean(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testColumnNameValidation(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testNullSupport(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testCompactMetadata(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testFloatWithExponent(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testTableOptions(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testUnescapedString(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testEmpty(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testNanInfinityValues(org.apache.cassandra.cql3.validation.miscellaneous.OverflowTest)",
            "testByteCodeVerifier(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithNotifyAll(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer3(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWaitI(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallComDatastax(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallOrgApache(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassStaticInnerClass(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUsingMapEntry(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassInnerClass(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassInnerClass2(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testInvalidByteCodeUDFs(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithStaticInitializer(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithNotify(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronized(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer2(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithInitializer(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testClassWithField(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallFinalize(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testCallClone(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWait(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testUseOfSynchronizedWithWaitL(org.apache.cassandra.cql3.validation.entities.UFVerifierTest)",
            "testJavaSourceName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionDropPreparedStatement(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionCreationAndDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testArgAndReturnTypes(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testImportJavaUtil(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testAnyUserTupleType(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testEmptyFunctionName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testEmptyArgName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDropFunctionDropsPreparedStatementsWithDelayedValues(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecutionWithReversedTypeAsOutput(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testCreateOrReplaceJavaFunction(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionInTargetKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionWithReservedName(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionInSystemKS(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionNonExistingKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionAfterOnDropKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testWrongKeyspace(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testUserTypeDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDuplicateArgNames(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testReplaceAllowNulls(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testBrokenFunction(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecutionExceptionNet(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testArgumentGenerics(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionExecution(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testDropKeyspaceContainingFunctionDropsPreparedStatementsWithDelayedValues(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionOverloading(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testFunctionDropOnKeyspaceDrop(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testSchemaChange(org.apache.cassandra.cql3.validation.entities.UFTest)",
            "testAlteringUserTypeNestedWithinMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlterNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlterUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinSet(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinList(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinTuple(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinNestedTuple(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinUserType(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUserTypes(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testNestedUserTypes(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAddFieldToUdt(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testCircularReferences(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testTypeAlterUsedInFunction(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInsertNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUpdateNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testDeleteNonFrozenUDT(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinSet(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testReadAfterAlteringUserTypeNestedWithinList(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinSetWithView(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "emptyTypeNameTest(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "emptyFieldNameTest(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "renameColumnToEmpty(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testUDTWithUnsetValues(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testAlteringUserTypeNestedWithinNonFrozenMap(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidUDTStatements(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testCassandra8105(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidInputForUserType(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testInvalidField(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testFor7684(org.apache.cassandra.cql3.validation.entities.UserTypesTest)",
            "testPgSyleFunction(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "testMarkerPgFail(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "testPgSyleInsert(org.apache.cassandra.cql3.validation.miscellaneous.PgStringTest)",
            "listPermissionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "alterSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "listRolesSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "grantRevokePermissionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "customOptionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "roleNameTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "standardOptionsSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "dropSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "createSyntaxTest(org.apache.cassandra.cql3.validation.miscellaneous.RoleSyntaxTest)",
            "testMinMaxtimestampRange(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowMarker(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowMarkerDelete(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "baseCheck(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rowTombstone(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testTrackMetadata_rangeTombstone(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testMinMaxtimestampRow(org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest)",
            "testMixedMemtableSStablesASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testOverlappingSStablesDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnDifferentSSTables(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnSameSSTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnMemTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnIndexedSSTableDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnIndexedSSTableASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testDeletionOnOverlappingIndexedSSTable(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testMultiplePartitionsDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testOverlappingSStablesASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testMixedMemtableSStablesDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSSTablesOnlyDESC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSSTablesOnlyASC(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testSinglePartitionQuery(org.apache.cassandra.cql3.validation.miscellaneous.SSTablesIteratedTest)",
            "testBeyondThresholdSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testAllShadowedSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testExpiredTombstones(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testLiveShadowedCellsSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testBelowThresholdSelect(org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithUdtFields(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testInvalidCalls(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testReversedType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testNestedFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testSchemaChange(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDropStatements(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDropReferenced(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNoInit(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNullInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateInvalidInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateIncompatibleTypes(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateNonExistingFuncs(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateFailingFuncs(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateWithoutStateOrFinal(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateSimple(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateEmpty(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateStateEmpty(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavaAggregateComplex(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavascriptAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testJavascriptAggregateSimple(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionDropPreparedStatement(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregatesReferencedInAggregates(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCalledOnNullInput(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testBrokenAggregate(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testWrongStateType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testWrongKeyspace(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenSetType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenListType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenMapType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenTupleType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionWithFrozenUDFType(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testEmptyValues(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testEmptyListAndNullInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testLogbackReload(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testOrReplaceOptionals(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCustomTypeInitcond(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithWriteTimeOrTTL(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateOnCounters(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateWithColumns(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testCountStarFunction(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testArithmeticCorrectness(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregatesWithoutOverflow(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testAggregateOverflow(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testDoubleAggregatesPrecision(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testNan(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testInfinity(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testSumPrecision(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctions(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "testFunctionsWithCompactStorage(org.apache.cassandra.cql3.validation.operations.AggregationTest)",
            "org.apache.cassandra.cql3.validation.operations.DropCompactStorageThriftTest",
            "testBatchDeleteInsert(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchAndConditionalInteraction(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchWithInRestriction(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchUpdate(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchEmpty(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatch(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchMultipleTable(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchRangeDelete(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchWithUnset(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testBatchAndList(org.apache.cassandra.cql3.validation.operations.BatchTest)",
            "testCreateIndexOnCompactTableWithClusteringColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCQL3PartitionKeyOnlyTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateKeyspaceWithMultipleInstancesOfSameDCThrowsException(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithSmallintColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseNonCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testStaticTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testInvalidCreateTableStatements(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testObsoleteTableProperties(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testKeyspace(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testTruncate(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testMultiOrderingValidation(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTrigger(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTriggerIfNotExists(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDropTrigger(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDropTriggerIfExists(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateIndexOnCompactTableWithoutClusteringColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateIndextWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDoubleWith(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithCompression(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTableWithDurationColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testSparseCompositeTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDenseStaticTable(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testCreateTinyintColumns(org.apache.cassandra.cql3.validation.operations.CreateTest)",
            "testDropWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropListAndAddListWithSameName(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testCreateAlterKeyspaces(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropSimpleAddComplexColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMultiCellAddFrozenColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropFrozenAddMultiCellColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropTimeUUIDAddUUIDColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropUUIDAddTimeUUIDColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropAddSameType(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropRegularAddStatic(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropStaticAddRegular(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "renameToEmptyTest(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDoubleWith(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterTableWithCompression(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterDropEmptySSTable(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterOnlyColumnBehaviorWithFlush(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterStatementWithAdd(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testChangeStrategyWithUnquotedAgrument(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterKeyspaceWithMultipleInstancesOfSameDCThrowsSyntaxException(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMap(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropListAndAddMapWithSameName(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropComplexAddSimpleColumn(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAddList(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAlterIndexInterval(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropMultipleWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testAddMap(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropStaticWithTimestamp(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testDropList(org.apache.cassandra.cql3.validation.operations.AlterTest)",
            "testCreateWithIdRestore(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testAlterWithId(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testCreateWithIdInvalid(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testCreateWithIdDuplicate(org.apache.cassandra.cql3.validation.operations.DropRecreateAndRestoreTest)",
            "testDeleteWithMultipleClusteringColumnsAndEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRangeDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithIntermediateRangeAndOneClusteringColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteByCompositePrefixWithCompaction(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRowDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRowExistence(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testNoRangeGhost(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletedRowsDoNotResurface(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithNoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithOneClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithNonoverlappingRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithRangeAndOneClusteringColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithRangeAndTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithSecondaryIndices(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithOnlyPK(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteColumnNoClustering(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteAndReverseQueries(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteWithEmptyInRestriction(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testThatDeletesWithEmptyInRestrictionDoNotCreateMutations(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testQueryingOnRangeTombstoneBoundForward(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testQueryingOnRangeTombstoneBoundReverse(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testReverseQueryWithRangeTombstoneOnMultipleBlocks(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithEmptyRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRandomDeletions(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletion(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteRange(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeletedRowCannotBeSelected(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testRemoveRangeSlice(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testDeleteByCompositePrefix(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testCrossMemSSTableMultiColumn(org.apache.cassandra.cql3.validation.operations.DeleteTest)",
            "testNonExistingOnes(org.apache.cassandra.cql3.validation.operations.DropTest)",
            "testDropTableWithDroppedColumns(org.apache.cassandra.cql3.validation.operations.DropTest)",
            "testPerPartitionLimitWithCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testFilteringOnClusteringColumnsWithLimitAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitInCompactTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testColumnRange(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testFilteringWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testPerPartitionLimit(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitWithDeletedRowsAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testLimitInStaticTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testPartitionRange(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testSparseTable(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testIndexOnRegularColumnWithPartitionWithoutRows(org.apache.cassandra.cql3.validation.operations.SelectLimitTest)",
            "testInsertWithCompactStorageAndTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testPKInsertWithValueOver64K(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testCKInsertWithValueOver64K(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithDefaultTtl(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithCompactFormat(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithTtl(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsertWithUnset(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testInsert(org.apache.cassandra.cql3.validation.operations.InsertTest)",
            "testGroupByWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithoutPagingWithDeletions(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithRangeNamesQueryWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithStaticColumnsWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithStaticColumnsWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithRangeNamesQueryWithoutPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testGroupByWithPaging(org.apache.cassandra.cql3.validation.operations.SelectGroupByTest)",
            "testSeveralMultiColumnRelation(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiplePartitionKeyAndMultiClusteringWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSingleClusteringInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSinglePartitionInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringReversedComponents(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClusteringWithIndexAndValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiColumnRestrictionsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns1(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns2(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns3(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumns4(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMixedOrderColumnsInReverse(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSimpleTupleQuery(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testINWithDuplicateValue(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiAndSingleColumnRelationMix(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultiClusteringInvalidQueries(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testWithUnsetValues(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testNonEqualsRelation(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest)",
            "testConditionalDeletesWithNonExistingValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNonExistingValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCasDelete(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeUDT(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testUDTField(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeList(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testListItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testExpandedListItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeSet(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testWholeMap(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMapItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testFrozenWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testExpandedMapItem(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCasAndListIndex(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateTableIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateIndexIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateTypeIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesOnStaticColumns(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNonExistingValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticsWithMultipleConditions(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalUpdatesWithNullValuesWithBatch(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalDeleteWithNullValues(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMultiExistConditionOnSameRowNoClustering(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testMultiExistConditionOnSameRowClustering(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithUDTs(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithLists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationColumns(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinLists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInMarkerWithMaps(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinMaps(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinUdts(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalOnDurationWithinTuples(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCasUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCompactStorage(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testDropCreateKeyspaceIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testInsertSetIfNotExists(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testSimpleCas(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testStaticColumnsCas(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testConditionalDelete(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testNonEqConditionalUpdate(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testCasAndTTL(org.apache.cassandra.cql3.validation.operations.InsertUpdateIfConditionTest)",
            "testSimpleOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testNormalSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMultiordering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testNormalSelectionOrderMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFunctionSelectionOrderMultipleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testOrderByForInClauseWithNullValue(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInOrderByWithTwoPartitionKeyColumns(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectWithReversedTypeInReverseOrderWithStaticColumnsWithoutStaticRow(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectWithReversedTypeInReverseOrderWithStaticColumnsWithStaticRow(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testSelectInStatementWithDesc(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFieldSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMoreOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testFunctionSelectionOrderSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInOrderByWithoutSelecting(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testReversedComparator(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testOrderByForInClause(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testInvalidOrderBy(org.apache.cassandra.cql3.validation.operations.SelectOrderByTest)",
            "testMultiColumnPartitionKeyWithTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testFilteringOnAllPartitionKeysWithTokenRestriction(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testSingleColumnPartitionKeyWithTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testFilteringOnPartitionKeyWithToken(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithPartitionKeyAndClusteringKeyArguments(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testPrimaryKeyOnly(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testRangeKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testMultiColumnPartitionKeyWithIndexAndTokenNonTokenRestrictionsMix(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithCompoundPartitionAndClusteringCols(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testIndexOnCompositeWithCollections(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTruncateWithCaching(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testCompositeIndexWithPK(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithMultiColumnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testLimitBug(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenFunctionWithSingleColumnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testOrderByMultikey(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testUndefinedColumns(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenAndCollections(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testTokenAndIndex(org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest)",
            "testClusteringColumnRelations(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithIndexedColumnAndStaticColumns(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidCollectionEqualityRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidMulticolumnSliceRestrictionOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testRangeQueryOnIndex(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testClusteringColumnRelationsWithClusteringOrder(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithClusteringColumn(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testAllowFilteringWithIndexedColumn(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testIndexQueriesOnComplexPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testMultiplePartitionKeyWithIndex(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testFunctionCallWithUnset(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testLimitWithUnset(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testWithUnsetValues(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidSliceRestrictionOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidColumnNames(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidNonFrozenUDTRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testINWithDuplicateValue(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testClusteringColumnRelationsWithCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testEmptyIN(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testInvalidCollectionNonEQRelation(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testLargeClusteringINValues(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testCompositeIndexWithPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testIndexOnClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testPartitionKeyColumnRelations(org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest)",
            "testTTLPerRequestLimit(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testRejectExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testRecoverOverflowedExpirationWithScrub(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testTTLDefaultLimit(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapNoWarnExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapWarnExpirationOverflowPolicy(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testCapNoWarnExpirationOverflowPolicyDefaultTTL(org.apache.cassandra.cql3.validation.operations.TTLTest)",
            "testTruncate(org.apache.cassandra.cql3.validation.operations.TruncateTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithLists(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSingleClustering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnStaticColumnsWithRowsWithOnlyStaticValues(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testListContainsWithIndexAndFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testListContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testPKQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCKQueryWithValueOver64K(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithDistinct(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionAndClusteringKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithoutIndicesWithCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyWithCounters(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithLists(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithMaps(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndicesAndWithSets(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnCompactTablesWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithMaps(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringWithMultiColumnSlices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "containsFilteringForClusteringKeys(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsOnPartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsOnPartitionKeyPart(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringWithOrderClause(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnStaticColumnTest(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "containsFilteringOnNonClusteringColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "filteringOnCompactTable(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCustomIndexWithFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithCounters(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testClusteringOrderWithSlice(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithSecondaryIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexQueryWithCompositePartitionKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValue(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithMultipleClusteringColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithOrderBy(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnDurationColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsKeyAndContainsWithIndexOnMapKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testContainsKeyAndContainsWithIndexOnMapValue(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectCount(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testRangeQuery(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testCompositeRowKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectSliceFromComposite(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testReverseCompact(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testReversedCompactMultikey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testDifferentOrdering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFiltering(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectOnCompositeInvalid(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelects(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelectsCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultiSelectsNonCompositeCompactStorage(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMultipleClausesOnPrimaryKey(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectWithToken(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFunctionsWithClusteringDesc(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectWithAlias(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinct(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithDeletions(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithWhereClause(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectDistinctWithWhereClauseOnStaticColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectInClauseAtOne(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectCountPaging(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testClusteringOrder(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectInFinalColumn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAlias(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndices(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndicesWithCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringWithoutIndicesWithFrozenCollections(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCompactTablesWithoutIndicesAndWithSets(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMapKeyContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectBounds(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testTokenRange(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testAllowFilteringOnPartitionKeyOnStaticColumnsWithRowsWithOnlyStaticValues(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testIndexLookupWithClusteringPrefix(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMapValueContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSetContainsWithIndex(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectKeyInForWideRows(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSingleClusteringReversed(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testEmptyRestrictionValueWithMultipleClusteringColumnsAndOrderBy(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnListContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnMapContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnTupleContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnUdtContainingDurations(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilteringOnCollectionsWithNull(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMixedTTLOnColumns(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testMixedTTLOnColumnsWide(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testSelectKeyIn(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testQueryMultipleIndexTypes(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testFilterWithIndexForContains(org.apache.cassandra.cql3.validation.operations.SelectTest)",
            "testUpdateWithSecondaryIndices(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testThatUpdatesWithEmptyInRestrictionDoNotCreateMutations(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithTwoClusteringColumns(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithTtl(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithCompactStaticFormat(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithCompactNonStaticFormat(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithEmptyInRestriction(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithMultiplePartitionKeyComponents(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testTypeCasts(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithDefaultTtl(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithStaticList(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdateWithAStaticColumn(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUpdate(org.apache.cassandra.cql3.validation.operations.UpdateTest)",
            "testUseStatementWithBindVariable(org.apache.cassandra.cql3.validation.operations.UseTest)",
            "org.apache.cassandra.db.ColumnFamilyMetricTest",
            "org.apache.cassandra.db.CellTest",
            "org.apache.cassandra.db.CleanupTest",
            "testCfmCompactStorageCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmIndexJson(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testSnapshot(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testSystemKsSnapshot(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDroppedType(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDenseTable(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testStaticCompactTable(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testStaticCompactWithCounters(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDenseCompactTableWithoutRegulars(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCompactDynamic(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDynamicComposite(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "superColumnFamilyTest(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmCounterCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmOptionsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testCfmColumnsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testReaddedColumns(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testDroppedColumnsCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "testUserTypesCQL(org.apache.cassandra.db.ColumnFamilyStoreCQLHelperTest)",
            "org.apache.cassandra.db.ColumnFamilyStoreTest",
            "org.apache.cassandra.db.CounterCacheTest",
            "org.apache.cassandra.db.CounterMutationTest",
            "org.apache.cassandra.db.CounterCellTest",
            "org.apache.cassandra.db.DeletePartitionTest",
            "testSecondaryIndexDirectories(org.apache.cassandra.db.DirectoriesTest)",
            "testMTSnapshots(org.apache.cassandra.db.DirectoriesTest)",
            "blackListTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "updateTokensTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "alterKeyspaceTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "getBoundariesTest(org.apache.cassandra.db.DiskBoundaryManagerTest)",
            "org.apache.cassandra.db.KeyCacheTest",
            "testGetSliceBloomFilterFalsePositive(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceWithCutoff(org.apache.cassandra.db.KeyspaceTest)",
            "testReversedWithFlushing(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromBasic(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceWithExpiration(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromAdvanced(org.apache.cassandra.db.KeyspaceTest)",
            "testGetSliceFromLarge(org.apache.cassandra.db.KeyspaceTest)",
            "testLimitSSTables(org.apache.cassandra.db.KeyspaceTest)",
            "testGetRowSingleColumn(org.apache.cassandra.db.KeyspaceTest)",
            "testGetRowNoColumns(org.apache.cassandra.db.KeyspaceTest)",
            "org.apache.cassandra.db.LegacyLayoutTest",
            "testSameTableNames(org.apache.cassandra.db.MultiKeyspaceTest)",
            "org.apache.cassandra.db.NameSortTest",
            "org.apache.cassandra.db.PartitionRangeReadTest",
            "org.apache.cassandra.db.PartitionTest",
            "org.apache.cassandra.db.RangeTombstoneTest",
            "org.apache.cassandra.db.ReadCommandTest",
            "org.apache.cassandra.db.ReadMessageTest",
            "testLegacyResponseSkipWrongBounds(org.apache.cassandra.db.ReadResponseTest)",
            "org.apache.cassandra.db.RecoveryManagerMissingHeaderTest",
            "org.apache.cassandra.db.RecoveryManagerFlushedTest",
            "org.apache.cassandra.db.RecoveryManagerTest",
            "org.apache.cassandra.db.RecoveryManagerTruncateTest",
            "testDeleteCell(org.apache.cassandra.db.RemoveCellTest)",
            "compactionDropExpiredSSTableTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestOldUnrepaired(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "compactionTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestPartitionTombstones(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTestRowTombstones(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "readOnlyUnrepairedTest(org.apache.cassandra.db.RepairedDataTombstonesTest)",
            "org.apache.cassandra.db.RowCacheTest",
            "testPartialCacheWithStatic(org.apache.cassandra.db.RowCacheCQLTest)",
            "test7636(org.apache.cassandra.db.RowCacheCQLTest)",
            "testPartialCache(org.apache.cassandra.db.RowCacheCQLTest)",
            "testRowIteration(org.apache.cassandra.db.RowIterationTest)",
            "testRowIterationDeletion(org.apache.cassandra.db.RowIterationTest)",
            "testRowIterationDeletionTime(org.apache.cassandra.db.RowIterationTest)",
            "testIndexFor(org.apache.cassandra.db.RowIndexEntryTest)",
            "testSerializedSize(org.apache.cassandra.db.RowIndexEntryTest)",
            "testC11206AgainstPreviousShallow(org.apache.cassandra.db.RowIndexEntryTest)",
            "testC11206AgainstPreviousArray(org.apache.cassandra.db.RowIndexEntryTest)",
            "org.apache.cassandra.db.RowTest",
            "org.apache.cassandra.db.ScrubTest",
            "org.apache.cassandra.db.SecondaryIndexTest",
            "partitionLevelDeletionTest(org.apache.cassandra.db.SinglePartitionReadCommandCQLTest)",
            "snapshotSystemKeyspaceIfUpgrading(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testNonLocalToken(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testLocalTokens(org.apache.cassandra.db.SystemKeyspaceTest)",
            "testLocalHostID(org.apache.cassandra.db.SystemKeyspaceTest)",
            "org.apache.cassandra.db.SinglePartitionSliceCommandTest",
            "testTimeSort(org.apache.cassandra.db.TimeSortTest)",
            "testMixedSources(org.apache.cassandra.db.TimeSortTest)",
            "org.apache.cassandra.db.VerifyTest",
            "org.apache.cassandra.db.columniterator.SSTableReverseIteratorTest",
            "org.apache.cassandra.db.commitlog.BatchCommitLogTest",
            "testTruncateSegmentDiscard(org.apache.cassandra.db.commitlog.CommitLogCQLTest)",
            "replayCommitLogWithoutFlushing(org.apache.cassandra.db.commitlog.CommitLogChainedMarkersTest)",
            "testCommitFailurePolicy_stop(org.apache.cassandra.db.commitlog.CommitLogFailurePolicyTest)",
            "testReadFromMidpointTooMany(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadCountFromMidpoint(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadCount(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadFromMidpoint(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testReadAll(org.apache.cassandra.db.commitlog.CommitLogReaderTest)",
            "testCLSMCDCDiscardLogic(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "testSegmentFlaggingOnCreation(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "testCDCWriteTimeout(org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest)",
            "org.apache.cassandra.db.commitlog.CommitLogTest",
            "org.apache.cassandra.db.commitlog.CommitLogUpgradeTest",
            "testShutdownWithPendingTasks(org.apache.cassandra.db.commitlog.CommitlogShutdownTest)",
            "org.apache.cassandra.db.commitlog.SnapshotDeletingTest",
            "org.apache.cassandra.db.compaction.AbstractCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.AntiCompactionTest",
            "testRedundantTransitions(org.apache.cassandra.db.compaction.AntiCompactionBytemanTest)",
            "org.apache.cassandra.db.compaction.BlacklistingCompactionsTest",
            "testStandardCompactionTaskCancellation(org.apache.cassandra.db.compaction.CancelCompactionsTest)",
            "org.apache.cassandra.db.compaction.CompactionAwareWriterTest",
            "org.apache.cassandra.db.compaction.CompactionControllerTest",
            "testGcCompactionSupersedeLeft(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionMatches(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testRandom(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSwitchInSuperseded(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionPartitionDeletion(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionRowDeletion(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionBoundaries(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSupersedeRight(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testGcCompactionSupersedeMiddle(org.apache.cassandra.db.compaction.CompactionIteratorTest)",
            "testSSTablesAssignedToCorrectCompactionStrategy(org.apache.cassandra.db.compaction.CompactionStrategyManagerTest)",
            "testTriggerMinorCompactionSTCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSDisabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategy(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionSTCSAlterTable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategyDisable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testSetLocalCompactionStrategyEnable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testBadLocalCompactionStrategyOptions(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSAlterTable(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionSTCSNodetoolEnabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionTWCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionDTCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerMinorCompactionLCS(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "testTriggerNoMinorCompactionSTCSNodetoolDisabled(org.apache.cassandra.db.compaction.CompactionsCQLTest)",
            "org.apache.cassandra.db.compaction.CompactionsPurgeTest",
            "testCompactingCFCounting(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "testStopUserDefinedCompactionRepaired(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "testStopSubRangeCompactionRepaired(org.apache.cassandra.db.compaction.CompactionsBytemanTest)",
            "org.apache.cassandra.db.compaction.CompactionsTest",
            "org.apache.cassandra.db.compaction.DateTieredCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.LeveledCompactionStrategyTest",
            "neverPurgeCellTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "minorNeverPurgeTombstonesTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "neverPurgePartitionTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "neverPurgeRowTombstoneTest(org.apache.cassandra.db.compaction.NeverPurgeTest)",
            "org.apache.cassandra.db.compaction.OneCompactionTest",
            "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyTest",
            "org.apache.cassandra.db.compaction.TTLExpiryTest",
            "org.apache.cassandra.db.compaction.TimeWindowCompactionStrategyTest",
            "testMerge(org.apache.cassandra.db.context.CounterContextTest)",
            "testTotal(org.apache.cassandra.db.context.CounterContextTest)",
            "testSetupDeletionNotification(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testMarkObsolete(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testObsoletionPerformance(org.apache.cassandra.db.lifecycle.HelpersTest)",
            "testSplit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testUpdates(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testCancellation(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testBadCommit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testCommit(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testNoPrepare(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testPrepare(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testThrowableReturn(org.apache.cassandra.db.lifecycle.LifecycleTransactionTest)",
            "testCommitOnlyOld(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFiles(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumSecondFromLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLineMissingFile(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testWrongChecksumLastLineWrongRecordFormat(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testMissingChecksumLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testMissingChecksumSecondFromLastLine(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUnparsableLastRecord(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUnparsableFirstRecord(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testObsoletedDataFileUpdateTimeChanged(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesSafeAfterObsoletion(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testGetTemporaryFilesThrowsIfCompletingAfterObsoletion(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortOnlyNew(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortOnlyOld(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_commit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_commit_multipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_abort_multipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_mismatchedFinalRecords(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialFinalRecords_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialFinalRecords_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialNonFinalRecord_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_partialNonFinalRecord_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_missingFinalRecords_first(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_missingFinalRecords_second(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_multipleFolders_tooManyFinalRecords(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testUntrack(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testRemoveUnfinishedLeftovers_abort(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAbortMultipleFolders(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitOnlyNew(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommitSameDesc(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testNoPrepare(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testThrowableReturn(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testPrepare(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testCommit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testBadCommit(org.apache.cassandra.db.lifecycle.LogTransactionTest)",
            "testAddSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testDropSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testNotifications(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testMemtableReplacement(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testAddInitialSSTables(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "testTryModify(org.apache.cassandra.db.lifecycle.TrackerTest)",
            "org.apache.cassandra.db.lifecycle.RealTransactionsTest",
            "testCompaction(org.apache.cassandra.db.lifecycle.ViewTest)",
            "testFlushing(org.apache.cassandra.db.lifecycle.ViewTest)",
            "testSSTablesInBounds(org.apache.cassandra.db.lifecycle.ViewTest)",
            "org.apache.cassandra.db.marshal.CompositeTypeTest",
            "org.apache.cassandra.db.marshal.DynamicCompositeTypeTest",
            "testTime(org.apache.cassandra.db.marshal.TimeTypeTest)",
            "testComparison(org.apache.cassandra.db.marshal.TimeTypeTest)",
            "org.apache.cassandra.db.partition.PartitionImplementationTest",
            "testOperationCountWithCompactTable(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "testOperationCount(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "testMutationSize(org.apache.cassandra.db.partition.PartitionUpdateTest)",
            "testTableWithCollection(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testStaticCompactTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCQLTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCompactTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "testCounterTable(org.apache.cassandra.db.rows.DigestBackwardCompatibilityTest)",
            "org.apache.cassandra.db.rows.RowAndDeletionMergeIteratorTest",
            "org.apache.cassandra.dht.BootStrapperTest",
            "testDescribeOwnership(org.apache.cassandra.dht.ByteOrderedPartitionerTest)",
            "org.apache.cassandra.dht.KeyCollisionTest",
            "testDescribeOwnership(org.apache.cassandra.dht.OrderPreservingPartitionerTest)",
            "testUpdateAndQueryAvailableRanges(org.apache.cassandra.dht.StreamStateStoreTest)",
            "testConvictAfterLeft(org.apache.cassandra.gms.FailureDetectorTest)",
            "org.apache.cassandra.gms.GossiperTest",
            "org.apache.cassandra.gms.PendingRangeCalculatorServiceTest",
            "testDelayedResponse(org.apache.cassandra.gms.ShadowRoundTest)",
            "testSerializer(org.apache.cassandra.hints.HintMessageTest)",
            "org.apache.cassandra.hints.HintTest",
            "org.apache.cassandra.hints.HintsBufferPoolTest",
            "org.apache.cassandra.hints.HintsBufferTest",
            "org.apache.cassandra.hints.HintsCatalogTest",
            "org.apache.cassandra.hints.HintsCompressionTest",
            "testNormalRead(org.apache.cassandra.hints.HintsReaderTest)",
            "testDroppedTableRead(org.apache.cassandra.hints.HintsReaderTest)",
            "org.apache.cassandra.hints.HintsEncryptionTest",
            "org.apache.cassandra.hints.HintsServiceTest",
            "org.apache.cassandra.hints.LegacyHintsMigratorTest",
            "notifyIndexersOfPartitionAndRowRemovalDuringCleanup(org.apache.cassandra.index.CustomIndexTest)",
            "notifyIndexersOfExpiredRowsDuringCompaction(org.apache.cassandra.index.CustomIndexTest)",
            "validateOptions(org.apache.cassandra.index.CustomIndexTest)",
            "validateOptionsWithCFMetaData(org.apache.cassandra.index.CustomIndexTest)",
            "testFailing2iFlush(org.apache.cassandra.index.CustomIndexTest)",
            "indexBuildingPagesLargePartitions(org.apache.cassandra.index.CustomIndexTest)",
            "partitionIndexTest(org.apache.cassandra.index.CustomIndexTest)",
            "partitionIsNotOverIndexed(org.apache.cassandra.index.CustomIndexTest)",
            "rangeTombstoneTest(org.apache.cassandra.index.CustomIndexTest)",
            "testInsertsOnCfsBackedIndex(org.apache.cassandra.index.CustomIndexTest)",
            "testTruncateWithNonCfsCustomIndex(org.apache.cassandra.index.CustomIndexTest)",
            "indexControlsIfIncludedInBuildOnNewSSTables(org.apache.cassandra.index.CustomIndexTest)",
            "indexReceivesWriteTimeDeletionsCorrectly(org.apache.cassandra.index.CustomIndexTest)",
            "nonCustomIndexesRequireExactlyOneTargetColumn(org.apache.cassandra.index.CustomIndexTest)",
            "rejectDuplicateColumnsInTargetList(org.apache.cassandra.index.CustomIndexTest)",
            "requireFullQualifierForFrozenCollectionTargets(org.apache.cassandra.index.CustomIndexTest)",
            "defaultIndexNameContainsTargetColumns(org.apache.cassandra.index.CustomIndexTest)",
            "createMultiColumnIndexes(org.apache.cassandra.index.CustomIndexTest)",
            "createMultiColumnIndexIncludingUserTypeColumn(org.apache.cassandra.index.CustomIndexTest)",
            "createIndexWithoutTargets(org.apache.cassandra.index.CustomIndexTest)",
            "testCustomIndexExpressionSyntax(org.apache.cassandra.index.CustomIndexTest)",
            "customIndexDoesntSupportCustomExpressions(org.apache.cassandra.index.CustomIndexTest)",
            "customIndexRejectsExpressionSyntax(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionsMustTargetCustomIndex(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionsDisallowedInModifications(org.apache.cassandra.index.CustomIndexTest)",
            "indexSelectionPrefersMostSelectiveIndex(org.apache.cassandra.index.CustomIndexTest)",
            "customExpressionForcesIndexSelection(org.apache.cassandra.index.CustomIndexTest)",
            "testCustomExpressionValueType(org.apache.cassandra.index.CustomIndexTest)",
            "reloadIndexMetadataOnBaseCfsReload(org.apache.cassandra.index.CustomIndexTest)",
            "testPagingWithClustering(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testNonLiteralStringCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testBlobCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testIntCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testStringCompare(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testStringLikePrefix(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testPaging(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testDisableSASIIndexes(org.apache.cassandra.index.sasi.SASICQLTest)",
            "testClientWarningOnCreate(org.apache.cassandra.index.sasi.SASICQLTest)",
            "indexOnNonFrozenListWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFirstPartitionKeyColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenSet(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapValuesWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapValuesWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapKeysWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapKeysWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapEntriesWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenMapEntriesWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnRegularColumnWithCompactStorage(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnStaticColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "testIndexOnCompactTable(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnClusteringColumnWithoutRegularColumns(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "createIndexesOnMultipleMapDimensions(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "insertWithTombstoneRemovesEntryFromIndex(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "updateTTLOnIndexedClusteringValue(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexBatchStatements(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexStatementsWithConditions(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexCorrectlyMarkedAsBuildAndRemoved(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnSecondPartitionKeyColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenSetWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenListWithInPlaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenList(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnSecondClusteringColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFirstClusteringColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenMap(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnRegularColumn(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnNonFrozenSetWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "org.apache.cassandra.index.sasi.SASIIndexTest",
            "org.apache.cassandra.index.sasi.disk.PerSSTableIndexWriterTest",
            "org.apache.cassandra.index.sasi.plan.OperationTest",
            "lz4ParamsTest(org.apache.cassandra.io.compress.CQLCompressionTest)",
            "lz4BadParamsTest(org.apache.cassandra.io.compress.CQLCompressionTest)",
            "compressionEnabled(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor3(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor2(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "badCompressor1(org.apache.cassandra.io.compress.CompressedSequentialWriterReopenTest)",
            "org.apache.cassandra.io.sstable.BigTableWriterTest",
            "org.apache.cassandra.io.sstable.CQLSSTableWriterTest",
            "org.apache.cassandra.io.sstable.IndexSummaryManagerTest",
            "org.apache.cassandra.io.sstable.IndexSummaryRedistributionTest",
            "org.apache.cassandra.io.sstable.LegacySSTableTest",
            "org.apache.cassandra.io.sstable.SSTableCorruptionDetectionTest",
            "org.apache.cassandra.io.sstable.SSTableCorruptionDetectionTest",
            "org.apache.cassandra.io.sstable.SSTableLoaderTest",
            "org.apache.cassandra.io.sstable.SSTableMetadataTest",
            "org.apache.cassandra.io.sstable.SSTableReaderTest",
            "org.apache.cassandra.io.sstable.SSTableRewriterTest",
            "org.apache.cassandra.io.sstable.SSTableScannerTest",
            "org.apache.cassandra.io.sstable.SSTableWriterTest",
            "testFlushObserver(org.apache.cassandra.io.sstable.format.SSTableFlushObserverTest)",
            "org.apache.cassandra.locator.CloudstackSnitchTest",
            "org.apache.cassandra.locator.EC2SnitchTest",
            "org.apache.cassandra.locator.GoogleCloudSnitchTest",
            "org.apache.cassandra.locator.ReplicationStrategyEndpointCacheTest",
            "org.apache.cassandra.locator.SimpleStrategyTest",
            "org.apache.cassandra.metrics.CQLMetricsTest",
            "testHintsMetrics(org.apache.cassandra.metrics.HintedHandOffMetricsTest)",
            "testUpdatesBackPressureOnSendWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "testUpdatesBackPressureOnTimeoutWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "testAppliesBackPressureWhenEnabled(org.apache.cassandra.net.MessagingServiceTest)",
            "testUpdatesBackPressureOnReceiveWhenEnabledAndWithSupportedCallback(org.apache.cassandra.net.MessagingServiceTest)",
            "org.apache.cassandra.net.MockMessagingServiceTest",
            "testDroppable(org.apache.cassandra.net.OutboundTcpConnectionTest)",
            "testNondroppable(org.apache.cassandra.net.OutboundTcpConnectionTest)",
            "org.apache.cassandra.repair.LocalSyncTaskTest",
            "org.apache.cassandra.repair.RepairJobTest",
            "org.apache.cassandra.repair.ValidatorTest",
            "testInvalidBloomFilterFPRatio(org.apache.cassandra.schema.CreateTableValidationTest)",
            "org.apache.cassandra.schema.DefsTest",
            "testMigrate(org.apache.cassandra.schema.LegacySchemaMigratorTest)",
            "org.apache.cassandra.schema.SchemaKeyspaceTest",
            "org.apache.cassandra.service.ActiveRepairServiceTest",
            "org.apache.cassandra.service.DataResolverTest",
            "org.apache.cassandra.service.ClientWarningsTest",
            "org.apache.cassandra.service.EmbeddedCassandraServiceTest",
            "org.apache.cassandra.service.JoinTokenRingTest",
            "testStartupChecks(org.apache.cassandra.service.LegacyAuthFailTest)",
            "testIgnoresStoppedOnAlreadyStopped(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentStarts(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentStops(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testPlainDefaultPort(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLOnly(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testConcurrentDestroys(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testIgnoresStartOnAlreadyStarted(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testServiceCanBeStopped(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testDestroy(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLOptional(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testSSLWithNonSSL(org.apache.cassandra.service.NativeTransportServiceTest)",
            "testEvolveSystemKeyspaceNew(org.apache.cassandra.service.MigrationManagerTest)",
            "testEvolveSystemKeyspaceExistsUpToDate(org.apache.cassandra.service.MigrationManagerTest)",
            "testEvolveSystemKeyspaceChanged(org.apache.cassandra.service.MigrationManagerTest)",
            "org.apache.cassandra.service.LeaveAndBootstrapTest",
            "org.apache.cassandra.service.MoveTest",
            "org.apache.cassandra.service.PaxosStateTest",
            "org.apache.cassandra.service.ProtocolBetaVersionTest",
            "org.apache.cassandra.service.QueryPagerTest",
            "testRemoveHostId(org.apache.cassandra.service.RemoveTest)",
            "failStartupIfInvalidSSTablesFound(org.apache.cassandra.service.StartupChecksTest)",
            "failStartupIfInvalidSSTablesFound(org.apache.cassandra.service.StartupChecksTest)",
            "compatibilityCheckIgnoresNonDbFiles(org.apache.cassandra.service.StartupChecksTest)",
            "compatibilityCheckIgnoresNonDbFiles(org.apache.cassandra.service.StartupChecksTest)",
            "maxMapCountCheck(org.apache.cassandra.service.StartupChecksTest)",
            "maxMapCountCheck(org.apache.cassandra.service.StartupChecksTest)",
            "testRegularMode(org.apache.cassandra.service.StorageServiceServerTest)",
            "testSnapshotWithFlush(org.apache.cassandra.service.StorageServiceServerTest)",
            "testTableSnapshot(org.apache.cassandra.service.StorageServiceServerTest)",
            "testSnapshot(org.apache.cassandra.service.StorageServiceServerTest)",
            "org.apache.cassandra.streaming.StreamTransferTaskTest",
            "org.apache.cassandra.streaming.StreamingTransferTest",
            "testSSTableExpiredBlockers_WithArgs(org.apache.cassandra.tools.SSTableExpiredBlockersTest)",
            "testSSTableLevelResetter_WithArgs(org.apache.cassandra.tools.SSTableLevelResetterTest)",
            "testSSTableOfflineRelevel_WithArgs(org.apache.cassandra.tools.SSTableOfflineRelevelTest)",
            "testStandaloneSSTableUtil_WithArgs(org.apache.cassandra.tools.StandaloneSSTableUtilTest)",
            "testStandaloneScrubber_WithArgs(org.apache.cassandra.tools.StandaloneScrubberTest)",
            "testStandaloneUpgrader_WithArgs(org.apache.cassandra.tools.StandaloneUpgraderTest)",
            "testStandaloneVerifier_WithArgs(org.apache.cassandra.tools.StandaloneVerifierTest)",
            "disableDynamicLimitWithSystemProperty(org.apache.cassandra.transport.DynamicLimitTest)",
            "disallowLoweringMaxVersion(org.apache.cassandra.transport.DynamicLimitTest)",
            "org.apache.cassandra.transport.InflightRequestPayloadTrackerTest",
            "testMessagePayloadVersion3(org.apache.cassandra.transport.MessagePayloadTest)",
            "testMessagePayload(org.apache.cassandra.transport.MessagePayloadTest)",
            "org.apache.cassandra.transport.ProtocolNegotiationTest",
            "addTriggerToCf(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "removeTriggerFromCf(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "addNewCfWithTriggerToKs(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "newKsContainsCfWithTrigger(org.apache.cassandra.triggers.TriggersSchemaTest)",
            "onThriftCASRejectGeneratedUpdatesForDifferentPartition(org.apache.cassandra.triggers.TriggersTest)",
            "onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentTable(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftInsert(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftBatchUpdate(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlInsertWithConditions(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlBatchWithConditions(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnThriftCASOperation(org.apache.cassandra.triggers.TriggersTest)",
            "onThriftCASRejectGeneratedUpdatesForDifferentCF(org.apache.cassandra.triggers.TriggersTest)",
            "ifTriggerThrowsErrorNoMutationsAreApplied(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlInsert(org.apache.cassandra.triggers.TriggersTest)",
            "onCqlUpdateWithConditionsRejectGeneratedUpdatesForDifferentPartition(org.apache.cassandra.triggers.TriggersTest)",
            "executeTriggerOnCqlBatchInsert(org.apache.cassandra.triggers.TriggersTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "Directories_RCF_4.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testClearEphemeralSnapshots(org.apache.cassandra.db.ColumnFamilyStoreTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "LogTransaction_RCF_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_8.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "Directories_RCF_7.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testClearEphemeralSnapshots(org.apache.cassandra.db.ColumnFamilyStoreTest)",
            "snapshotSystemKeyspaceIfUpgrading(org.apache.cassandra.db.SystemKeyspaceTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "CommitLogArchiver_RCF_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_RCF_4.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "WindowsFailedSnapshotTracker_RCF_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "WindowsFailedSnapshotTracker_RCF_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCF_3.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Directories_RCF_6.txt",
        "coverage_tests": [],
        "kill_tests": [
            "simpleValidationTest128(org.apache.cassandra.repair.ValidatorTest)",
            "simpleValidationTest1500(org.apache.cassandra.repair.ValidatorTest)",
            "testGetActiveRepairedSSTableRefs(org.apache.cassandra.service.ActiveRepairServiceTest)",
            "testAddingMoreSSTables(org.apache.cassandra.service.ActiveRepairServiceTest)",
            "testSnapshotAddSSTables(org.apache.cassandra.service.ActiveRepairServiceTest)",
            "testSnapshotMultipleRepairs(org.apache.cassandra.service.ActiveRepairServiceTest)",
            "testSnapshotWithFlush(org.apache.cassandra.service.StorageServiceServerTest)",
            "testTableSnapshot(org.apache.cassandra.service.StorageServiceServerTest)",
            "testSnapshot(org.apache.cassandra.service.StorageServiceServerTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "ColumnFamilyStore_MCT_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_MCT_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CompactionManager_MCT_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_BCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testSecondaryIndexDirectories(org.apache.cassandra.db.DirectoriesTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "AbstractCommitLogSegmentManager_BCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "DateTieredCompactionStrategy_BCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "CommitLogSegmentManagerCDC_BCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "AbstractCommitLogSegmentManager_BCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegmentManagerCDC_BCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "UnfilteredSerializer_RFE_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Columns_RFE_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testDeserializeCorruption(org.apache.cassandra.db.ColumnsTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "ClusteringPrefix_RFE_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Keyspace_RFE_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testRedundantTransitions(org.apache.cassandra.db.compaction.AntiCompactionBytemanTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "UnfilteredSerializer_RFE_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "CommitLogSegment_NCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_NCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_NCS_3.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "Keyspace_NCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_NCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_NCS_4.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_SCS_5.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegmentManagerCDC_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Keyspace_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_SCS_3.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "Keyspace_SCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "CommitLogSegmentManagerCDC_SCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "AbstractCommitLogSegmentManager_SCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegment_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_SCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "DateTieredCompactionStrategy_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "TypeParser_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "AbstractCommitLogSegmentManager_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_SCS_4.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_SCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "compileFailure"
    },
    {
        "id": "ColumnFamilyStore_RCS_3.txt",
        "coverage_tests": [],
        "kill_tests": [
            "indexOnNonFrozenMapKeysWithReplaceOperation(org.apache.cassandra.index.internal.CassandraIndexTest)",
            "indexOnFrozenMap(org.apache.cassandra.index.internal.CassandraIndexTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "ColumnFamilyStore_RCS_4.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegment_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCS_5.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "AbstractCommitLogSegmentManager_RCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegmentManagerCDC_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "CommitLogSegmentManagerCDC_RCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Keyspace_RCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "DateTieredCompactionStrategy_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "Keyspace_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [
            "testMajorCompactionPurgeTombstonesWithMaxTimestamp(org.apache.cassandra.db.compaction.CompactionsPurgeTest)",
            "testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp(org.apache.cassandra.db.compaction.CompactionsPurgeTest)",
            "testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp(org.apache.cassandra.db.compaction.CompactionsPurgeTest)",
            "testMajorCompactionPurge(org.apache.cassandra.db.compaction.CompactionsPurgeTest)",
            "testSchemaVersionUpdate(org.apache.cassandra.gms.GossiperTest)",
            "testStartupChecks(org.apache.cassandra.service.LegacyAuthFailTest)"
        ],
        "result": "testFailure"
    },
    {
        "id": "AbstractCommitLogSegmentManager_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCS_6.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "ColumnFamilyStore_RCS_2.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "TypeParser_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    },
    {
        "id": "DiskBoundaryManager_RCS_1.txt",
        "coverage_tests": [],
        "kill_tests": [],
        "result": "notKilled"
    }
]